{
  "openapi": "3.0.0",
  "info": {
    "title": "DigitalOcean API",
    "version": "2.0",
    "description": "The DigitalOcean API allows you to manage Droplets and resources within the DigitalOcean cloud in a simple, programmatic way using conventional HTTP requests.\n",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "contact": {
      "name": "DigitalOcean API Team",
      "email": "api-engineering@digitalocean.com"
    },
    "termsOfService": "https://www.digitalocean.com/legal/terms-of-service-agreement/"
  },
  "servers": [
    {
      "url": "https://api.digitalocean.com/v2",
      "description": "production"
    }
  ],
  "tags": [
    {
      "name": "1-Click Applications",
      "description": "1-Click applications are pre-built Droplet images or Kubernetes apps with software, features, and configuration details already set up for you. They can be found in the [DigitalOcean Marketplace](https://www.digitalocean.com/docs/marketplace).\n"
    },
    {
      "name": "Account",
      "description": "Provides information about your current account."
    },
    {
      "name": "Actions",
      "description": "Actions are records of events that have occurred on the resources in your account. These can be things like rebooting a Droplet, or transferring an image to a new region.\n\nAn action object is created every time one of these actions is initiated. The action object contains information about the current status of the action, start and complete timestamps, and the associated resource type and ID.\n\nEvery action that creates an action object is available through this endpoint. Completed actions are not removed from this list and are always available for querying.\n"
    },
    {
      "name": "Droplets",
      "description": "A [Droplet](https://www.digitalocean.com/docs/droplets/) is a DigitalOcean\nvirtual machine. By sending requests to the Droplet endpoint, you can\nlist, create, or delete Droplets.\n\nSome of the attributes will have an object value. The `region` and `image`\nobjects will all contain the standard attributes of their associated\ntypes. Find more information about each of these objects in their\nrespective sections.\n"
    },
    {
      "name": "Images",
      "description": "A DigitalOcean [image](https://www.digitalocean.com/docs/images/) can be used to create a Droplet and may come in a number of flavors. Currently, there are five types of images: snapshots, backups, applications, distributions, and custom images.\n\n* [Snapshots](https://www.digitalocean.com/docs/images/snapshots/) provide a full copy of an existing Droplet instance taken on demand.\n* [Backups](https://www.digitalocean.com/docs/images/backups/) are similar to snapshots but are created automatically at regular intervals when enabled for a Droplet.\n* [Custom images](https://www.digitalocean.com/docs/images/custom-images/) are Linux-based virtual machine images (raw, qcow2, vhdx, vdi, and vmdk formats are supported) that you may upload for use on DigitalOcean.\n* Distributions are the public Linux distributions that are available to be used as a base to create Droplets.\n* Applications, or [1-Click Apps](https://www.digitalocean.com/docs/one-clicks/), are distributions pre-configured with additional software.\n\nTo interact with images, you will generally send requests to the images endpoint at /v2/images.\n"
    },
    {
      "name": "Regions",
      "description": "Provides information about DigitalOcean data center regions."
    },
    {
      "name": "Sizes",
      "description": "The sizes objects represent different packages of hardware resources that can be used for Droplets. When a Droplet is created, a size must be selected so that the correct resources can be allocated.\n\nEach size represents a plan that bundles together specific sets of resources. This includes the amount of RAM, the number of virtual CPUs, disk space, and transfer. The size object also includes the pricing details and the regions that the size is available in.\n"
    },
    {
      "name": "Snapshots",
      "description": "[Snapshots](https://www.digitalocean.com/docs/images/snapshots/) are saved\ninstances of a Droplet or a block storage volume, which is reflected in\nthe `resource_type` attribute. In order to avoid problems with compressing\nfilesystems, each defines a `min_disk_size` attribute which is the minimum\nsize of the Droplet or volume disk when creating a new resource from the\nsaved snapshot.\n\nTo interact with snapshots, you will generally send requests to the\nsnapshots endpoint at `/v2/snapshots`.\n"
    },
    {
      "name": "SSH Keys",
      "description": "Manage SSH keys available on your account."
    },
    {
      "name": "Tags",
      "description": "A tag is a label that can be applied to a resource (currently Droplets, Images, Volumes, Volume Snapshots, and Database clusters)\nin order to better organize or facilitate the lookups and actions on it.\n\nTags have two attributes: a user defined `name` attribute and an embedded `resources` attribute with information about resources that have been tagged.\n"
    }
  ],
  "paths": {
    "/1-clicks": {
      "get": {
        "operationId": "list",
        "summary": "List 1-Click Applications",
        "description": "To list all available 1-Click applications, send a GET request to `/v2/1-clicks`. The `type` may\nbe provided as query paramater in order to restrict results to a certain type of 1-Click, for\nexample: `/v2/1-clicks?type=droplet`. Current supported types are `kubernetes` and `droplet`.\n\nThe response will be a JSON object with a key called `1_clicks`. This will be set to an array of\n1-Click application data, each of which will contain the the slug and type for the 1-Click.\n",
        "tags": [
          "1-Click Applications"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/1ClickType"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/all_1_clicks"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/1-clicks/kubernetes": {
      "post": {
        "operationId": "install_kubernetes",
        "summary": "Install Kubernetes 1-Click Applications",
        "description": "To install a Kubernetes 1-Click application on a cluster, send a POST request to\n`/v2/1-clicks/kubernetes`. The `addon_slugs` and `cluster_uuid` must be provided as body\nparameter in order to specify which 1-Click application(s) to install. To list all available\n1-Click Kubernetes applications, send a request to `/v2/1-clicks?type=kubernetes`.\n",
        "tags": [
          "1-Click Applications"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1_click_create"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/1_click_create"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/account": {
      "get": {
        "operationId": "get_user_information",
        "summary": "Get User Information",
        "description": "To show information about the current user account, send a GET request to `/v2/account`.",
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "A JSON object keyed on account with an excerpt of the current user account data.",
            "headers": {
              "ratelimit-limit": {
                "$ref": "#/components/headers/ratelimit-limit"
              },
              "ratelimit-remaining": {
                "$ref": "#/components/headers/ratelimit-remaining"
              },
              "ratelimit-reset": {
                "$ref": "#/components/headers/ratelimit-reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wrapped_account"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/account/keys": {
      "get": {
        "operationId": "list_all_keys",
        "summary": "List All SSH Keys",
        "description": "To list all of the keys in your account, send a GET request to `/v2/account/keys`. The response will be a JSON object with a key set to `ssh_keys`. The value of this will be an array of ssh_key objects, each of which contains the standard ssh_key attributes.",
        "tags": [
          "SSH Keys"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Page"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/all_keys"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      },
      "post": {
        "operationId": "create_a_new_key",
        "summary": "Create a New SSH Key",
        "description": "To add a new SSH public key to your DigitalOcean account, send a POST request to `/v2/account/keys`. Set the `name` attribute to the name you wish to use and the `public_key` attribute to the full public key you are adding.",
        "tags": [
          "SSH Keys"
        ],
        "requestBody": {
          "description": "Set the `name` attribute to the name you wish to use and the `public_key` attribute to the full public key you are adding.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ssh_key"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "ratelimit-limit": {
                "$ref": "#/components/headers/ratelimit-limit"
              },
              "ratelimit-remaining": {
                "$ref": "#/components/headers/ratelimit-remaining"
              },
              "ratelimit-reset": {
                "$ref": "#/components/headers/ratelimit-reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wrapped_ssh_key"
                }
              }
            },
            "links": {
              "GetSSHKeyById": {
                "$ref": "#/components/links/get_ssh_key_by_id"
              },
              "GetSSHKeyByFingerprint": {
                "$ref": "#/components/links/get_ssh_key_by_fingerprint"
              },
              "DeleteSSHKeyById": {
                "$ref": "#/components/links/delete_ssh_key_by_id"
              },
              "DeleteSSHKeyByFingerprint": {
                "$ref": "#/components/links/delete_ssh_key_by_fingerprint"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/account/keys/{ssh_key_identifier}": {
      "get": {
        "operationId": "retrieve_an_existing_key",
        "summary": "Retrieve an Existing SSH Key",
        "description": "To get information about a key, send a GET request to `/v2/account/keys/$KEY_ID` or `/v2/account/keys/$KEY_FINGERPRINT`.\nThe response will be a JSON object with the key `ssh_key` and value an ssh_key object which contains the standard ssh_key attributes.",
        "tags": [
          "SSH Keys"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ssh_key_identifier"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/existing_key"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      },
      "patch": {
        "operationId": "update_a_key",
        "summary": "Update an SSH Key's Name",
        "description": "To update the name of an SSH key, send a PUT request to either `/v2/account/keys/$SSH_KEY_ID` or `/v2/account/keys/$SSH_KEY_FINGERPRINT`. Set the `name` attribute to the new name you want to use.",
        "tags": [
          "SSH Keys"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ssh_key_identifier"
          }
        ],
        "requestBody": {
          "description": "Set the `name` attribute to the new name you want to use.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "$ref": "#/components/schemas/ssh_key_name"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/existing_key"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      },
      "delete": {
        "operationId": "destroy_a_key",
        "summary": "Delete an SSH Key",
        "description": "To destroy a public SSH key that you have in your account, send a DELETE request to `/v2/account/keys/$KEY_ID` or `/v2/account/keys/$KEY_FINGERPRINT`.\nA 204 status will be returned, indicating that the action was successful and that the response body is empty.",
        "tags": [
          "SSH Keys"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ssh_key_identifier"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/no_content"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/actions": {
      "get": {
        "operationId": "list_all_actions",
        "summary": "List All Actions",
        "description": "This will be the entire list of actions taken on your account, so it will be quite large.  As with any large collection returned by the API, the results will be paginated with only 20 on each page by default.",
        "tags": [
          "Actions"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Page"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/all_actions"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/actions/{action_id}": {
      "get": {
        "operationId": "retrieve_an_existing_action",
        "summary": "Retrieve an Existing Action",
        "description": "To retrieve a specific action object, send a GET request to `/v2/actions/$ACTION_ID`.",
        "tags": [
          "Actions"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/actionId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/existing_action"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/droplets": {
      "get": {
        "operationId": "list_all_droplets",
        "summary": "List All Droplets",
        "description": "To list all Droplets in your account, send a GET request to `/v2/droplets`.\n\nThe response body will be a JSON object with a key of `droplets`. This will be\nset to an array containing objects each representing a Droplet. These will\ncontain the standard Droplet attributes.\n\n### Filtering Results by Tag\n\nIt's possible to request filtered results by including certain query parameters.\nTo only list Droplets assigned to a specific tag, include the `tag_name` query\nparameter set to the name of the tag in your GET request. For example,\n`/v2/droplets?tag_name=$TAG_NAME`.\n",
        "tags": [
          "Droplets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/DropletTagName"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/all_droplets"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      },
      "post": {
        "operationId": "create_droplet",
        "summary": "Create a New Droplet",
        "description": "To create a new Droplet, send a POST request to `/v2/droplets` setting the\nrequired attributes.\n\nA Droplet will be created using the provided information. The response body\nwill contain a JSON object with a key called `droplet`. The value will be an\nobject containing the standard attributes for your new Droplet. The response\ncode, 202 Accepted, does not indicate the success or failure of the operation,\njust that the request has been accepted for processing. The `actions` returned\nas part of the response's `links` object can be used to check the status\nof the Droplet create event.\n\n### Create Multiple Droplets\n\nCreating multiple Droplets is very similar to creating a single Droplet.\nInstead of sending `name` as a string, send `names` as an array of strings. A\nDroplet will be created for each name you send using the associated\ninformation. Up to ten Droplets may be created this way at a time.\n\nRather than returning a single Droplet, the response body will contain a JSON\narray with a key called `droplets`. This will be set to an array of JSON\nobjects, each of which will contain the standard Droplet attributes. The\nresponse code, 202 Accepted, does not indicate the success or failure of any\noperation, just that the request has been accepted for processing. The array\nof `actions` returned as part of the response's `links` object can be used to\ncheck the status of each individual Droplet create event.\n",
        "tags": [
          "Droplets"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/droplet_single_create"
                  },
                  {
                    "$ref": "#/components/schemas/droplet_multi_create"
                  }
                ]
              },
              "examples": {
                "Single Droplet Create Request": {
                  "$ref": "#/components/examples/DropletCreateRequest"
                },
                "Multiple Droplet Create Request": {
                  "$ref": "#/components/examples/DropletMultiCreateRequest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "$ref": "#/components/responses/droplet_create"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      },
      "delete": {
        "operationId": "destroy_droplets_by_tag",
        "summary": "Deleting Droplets by Tag",
        "description": "To delete **all** Droplets assigned to a specific tag, include the `tag_name`\nquery parameter set to the name of the tag in your DELETE request. For\nexample,  `/v2/droplets?tag_name=$TAG_NAME`.\n\nA successful request will receive a 204 status code with no body in response.\nThis indicates that the request was processed successfully.\n",
        "tags": [
          "Droplets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DropletDeleteTagName"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/no_content"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/droplets/{droplet_id}": {
      "get": {
        "operationId": "retrieve_existing_droplet",
        "summary": "Retrieve an Existing Droplet",
        "description": "To show information about an individual Droplet, send a GET request to\n`/v2/droplets/$DROPLET_ID`.\n",
        "tags": [
          "Droplets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DropletId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/existing_droplet"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      },
      "delete": {
        "operationId": "destroy_droplet",
        "summary": "Delete an Existing Droplet",
        "description": "To delete a Droplet, send a DELETE request to `/v2/droplets/$DROPLET_ID`.\n\nA successful request will receive a 204 status code with no body in response.\nThis indicates that the request was processed successfully.\n",
        "tags": [
          "Droplets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DropletId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/no_content"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/droplets/{droplet_id}/kernels": {
      "get": {
        "operationId": "list_droplet_kernels",
        "summary": "List All Available Kernels for a Droplet",
        "description": "To retrieve a list of all kernels available to a Droplet, send a GET request\nto `/v2/droplets/$DROPLET_ID/kernels`\n\nThe response will be a JSON object that has a key called `kernels`. This will\nbe set to an array of `kernel` objects, each of which contain the standard\n`kernel` attributes.\n",
        "tags": [
          "Droplets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DropletId"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Page"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/all_kernels"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/v2/droplets/{droplet_id}/neighbors": {
      "get": {
        "operationId": "list_droplet_neighbors",
        "summary": "List Neighbors for a Droplet",
        "description": "To retrieve a list of any \"neighbors\" (i.e. Droplets that are co-located on\nthe same physical hardware) for a specific Droplet, send a GET request to\n`/v2/droplets/$DROPLET_ID/neighbors`.\n\nThe results will be returned as a JSON object with a key of `droplets`. This\nwill be set to an array containing objects representing any other Droplets\nthat share the same physical hardware. An empty array indicates that the\nDroplet is not co-located any other Droplets associated with your account.\n",
        "tags": [
          "Droplets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DropletId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/neighbor_droplets"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/images": {
      "get": {
        "operationId": "get_images_list",
        "summary": "List All Images",
        "description": "To list all of the images available on your account, send a GET request to /v2/images.\n\n## Filtering Results\n-----\n\nIt's possible to request filtered results by including certain query parameters.\n\n**Image Type**\n\nEither 1-Click Application or OS Distribution images can be filtered by using the `type` query parameter.\n\n> Important: The `type` query parameter does not directly relate to the `type` attribute.\n\nTo retrieve only ***distribution*** images, include the `type` query parameter set to distribution, `/v2/images?type=distribution`.\n\nTo retrieve only ***application*** images, include the `type` query parameter set to application, `/v2/images?type=application`.\n\n**User Images**\n\nTo retrieve only the private images of a user, include the `private` query parameter set to true, `/v2/images?private=true`.\n\n**Tags**\n\nTo list all images assigned to a specific tag, include the `tag_name` query parameter set to the name of the tag in your GET request. For example, `/v2/images?tag_name=$TAG_NAME`.\n",
        "tags": [
          "Images"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Private"
          },
          {
            "$ref": "#/components/parameters/Tag"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Page"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/all_images"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      },
      "post": {
        "operationId": "create_a_custom_image",
        "summary": "Create a Custom Image",
        "description": "To create a new custom image, send a POST request to /v2/images. \nThe body must contain a url attribute pointing to a Linux virtual machine \nimage to be imported into DigitalOcean. \nThe image must be in the raw, qcow2, vhdx, vdi, or vmdk format. \nIt may be compressed using gzip or bzip2 and must be smaller than 100 GB after\n being decompressed.\n",
        "tags": [
          "Images"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/image_new_custom"
              }
            }
          }
        },
        "responses": {
          "202": {
            "$ref": "#/components/responses/new_custom_image"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/images/{identifier}": {
      "get": {
        "operationId": "retrieve_existing_image",
        "summary": "Retrieve an Existing Image",
        "description": "To retrieve information about an image, send a `GET` request to \n`/v2/images/$IDENTIFIER`.  \n",
        "tags": [
          "Images"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A unique number (id) or string (slug) used to identify and reference a \nspecific image.\n\n**Public** images can be identified by image `id` or `slug`.\n\n**Private** images *must* be identified by image `id`.\n",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            },
            "examples": {
              "byId": {
                "summary": "Retrieve a public or private image by id",
                "value": 62137902
              },
              "bySlug": {
                "summary": "Retrieve a public image by slug",
                "value": "ubuntu-16-04-x64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/existing_image"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      },
      "put": {
        "operationId": "update_an_image",
        "summary": "Update an Image",
        "description": "To update an image, send a `PUT` request to `/v2/images/$IMAGE_ID`. \nSet the `name` attribute to the new value you would like to use. \nFor custom images, the `description` and `distribution` attributes may also be updated.\n",
        "tags": [
          "Images"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ImageId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/image_update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/updated_image"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      },
      "delete": {
        "operationId": "delete_an_image",
        "summary": "Delete an Image",
        "description": "To delete a snapshot or custom image, send a `DELETE` request to `/v2/images/$IMAGE_ID`.\n",
        "tags": [
          "Images"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ImageId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/no_content"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/regions": {
      "get": {
        "operationId": "list_all_regions",
        "summary": "List All Data Center Regions",
        "description": "To list all of the regions that are available, send a GET request to `/v2/regions`.\nThe response will be a JSON object with a key called `regions`. The value of this will be an array of `region` objects, each of which will contain the standard region attributes.",
        "tags": [
          "Regions"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Page"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/all_regions"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/v2/reports/droplet_neighbors_ids": {
      "get": {
        "operationId": "list_all_droplet_neighbors_ids",
        "summary": "List All Droplet Neighbors",
        "description": "To retrieve a list of all Droplets that are co-located on the same physical\nhardware, send a GET request to `/v2/reports/droplet_neighbors_ids`.\n\nThe results will be returned as a JSON object with a key of `neighbor_ids`.\nThis will be set to an array of arrays. Each array will contain a set of\nDroplet IDs for Droplets that share a physical server. An empty array\nindicates that all Droplets associated with your account are located on\nseparate physical hardware.\n",
        "tags": [
          "Droplets"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/droplet_neighbors_ids"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/sizes": {
      "get": {
        "operationId": "list_all_sizes",
        "summary": "List All Droplet Sizes",
        "description": "To list all of available Droplet sizes, send a GET request to `/v2/sizes`.\nThe response will be a JSON object with a key called `sizes`. The value of this will be an array of `size` objects each of which contain the standard size attributes.",
        "tags": [
          "Sizes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Page"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/all_sizes"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/snapshots": {
      "get": {
        "operationId": "list_all_snapshots",
        "summary": "List All Snapshots",
        "description": "To list all of the snapshots available on your account, send a GET request to\n`/v2/snapshots`.\n\nThe response will be a JSON object with a key called `snapshots`. This will be\nset to an array of `snapshot` objects, each of which will contain the standard\nsnapshot attributes.\n\n### Filtering Results by Resource Type\n\nIt's possible to request filtered results by including certain query parameters.\n\n#### List Droplet Snapshots\n\nTo retrieve only snapshots based on Droplets, include the `resource_type`\nquery parameter set to `droplet`. For example, `/v2/snapshots?resource_type=droplet`.\n\n#### List Volume Snapshots\n\nTo retrieve only snapshots based on volumes, include the `resource_type`\nquery parameter set to `volume`. For example, `/v2/snapshots?resource_type=volume`.\n",
        "tags": [
          "Snapshots"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/SnapshotResourceType"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/all_snapshots"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/snapshots/{snapshot_id}": {
      "get": {
        "operationId": "retrieve_existing_snapshot",
        "summary": "Retrieve an Existing Snapshot",
        "description": "To retrieve information about a snapshot, send a GET request to\n`/v2/snapshots/$SNAPSHOT_ID`.\n\nThe response will be a JSON object with a key called `snapshot`. The value of\nthis will be an snapshot object containing the standard snapshot attributes.\n",
        "tags": [
          "Snapshots"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/SnapshotId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/existing_snapshot"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      },
      "delete": {
        "operationId": "delete_snapshot",
        "summary": "Delete a Snapshot",
        "description": "To delete a snapshot, send a DELETE request to `/v2/snapshots/$SNAPSHOT_ID`.\n\nA status of 204 will be given. This indicates that the request was processed\nsuccessfully, but that no response body is needed.\n",
        "tags": [
          "Snapshots"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/SnapshotId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/no_content"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/tags": {
      "get": {
        "operationId": "list_all_tags",
        "summary": "List All Tags",
        "description": "To list all of your tags, you can send a GET request to `/v2/tags`.",
        "tags": [
          "Tags"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/all_tags"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      },
      "post": {
        "operationId": "create_new_tag",
        "summary": "Create a New Tag",
        "description": "To create a tag you can send a POST request to `/v2/tags` with a `name` attribute.",
        "tags": [
          "Tags"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/new_tag"
          },
          "400": {
            "$ref": "#/components/responses/bad_request"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    },
    "/tags/{tag_id}": {
      "get": {
        "operationId": "retrieve_tag",
        "summary": "Retrieve a Tag",
        "description": "To retrieve an individual tag, you can send a `GET` request to  `/v2/tags/$TAG_NAME`.",
        "tags": [
          "Tags"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/TagId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/existing_tag"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      },
      "delete": {
        "operationId": "delete_tag",
        "summary": "Delete a Tag",
        "description": "A tag can be deleted by sending a `DELETE` request to `/v2/tags/$TAG_NAME`.  Deleting a tag also untags all the resources that have previously been tagged  by the Tag.",
        "tags": [
          "Tags"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/TagId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/no_content"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_error"
          },
          "default": {
            "$ref": "#/components/responses/unexpected_error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "parameters": {
      "1ClickType": {
        "in": "query",
        "name": "type",
        "description": "Restrict results to a certain type of 1-Click.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "droplet",
            "kubernetes"
          ]
        },
        "example": "kubernetes"
      },
      "PerPage": {
        "in": "query",
        "name": "per_page",
        "required": false,
        "description": "Number of items returned per page",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 20,
          "maximum": 200
        },
        "example": 2
      },
      "Page": {
        "in": "query",
        "name": "page",
        "required": false,
        "description": "Which 'page' of paginated results to return.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        },
        "example": 1
      },
      "ssh_key_identifier": {
        "in": "path",
        "name": "ssh_key_identifier",
        "required": true,
        "description": "Either the id or the fingerprint of an existing ssh key.",
        "schema": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/ssh_key_id"
            },
            {
              "$ref": "#/components/schemas/ssh_key_fingerprint"
            }
          ]
        },
        "example": 512189
      },
      "actionId": {
        "in": "path",
        "name": "action_id",
        "description": "A unique numeric ID that can be used to identify and reference an action.",
        "required": true,
        "schema": {
          "type": "integer",
          "minimum": 1
        },
        "example": 36804636
      },
      "DropletTagName": {
        "in": "query",
        "name": "tag_name",
        "description": "Used to filter Droplets by a specific tag.",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "env:prod"
      },
      "DropletDeleteTagName": {
        "in": "query",
        "name": "tag_name",
        "description": "Specifies Droplets to be deleted by tag.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "env:test"
      },
      "DropletId": {
        "in": "path",
        "name": "droplet_id",
        "description": "A unique identifier for a Droplet instance.",
        "required": true,
        "schema": {
          "type": "integer",
          "minimum": 1
        },
        "example": 3164444
      },
      "Type": {
        "in": "query",
        "name": "type",
        "description": "Filters results based on image type which can be either `application` or `distribution`.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "application",
            "distribution"
          ]
        },
        "example": "distribution"
      },
      "Private": {
        "in": "query",
        "name": "private",
        "description": "Used to filter only user images.",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "example": true
      },
      "Tag": {
        "in": "query",
        "name": "tag_name",
        "description": "Used to filter images by a specific tag.",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "base-image"
      },
      "ImageId": {
        "in": "path",
        "name": "identifier",
        "description": "A unique number that can be used to identify and reference a specific image.",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "example": 62137902
      },
      "SnapshotResourceType": {
        "in": "query",
        "name": "resource_type",
        "description": "Used to filter snapshots by a resource type.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "droplet",
            "volume"
          ]
        },
        "example": "droplet"
      },
      "SnapshotId": {
        "in": "path",
        "name": "snapshot_id",
        "required": true,
        "description": "Either the ID of an existing snapshot. This will be an integer for a Droplet snapshot or a string for a volume snapshot.",
        "schema": {
          "oneOf": [
            {
              "type": "integer",
              "description": "The ID of a Droplet snapshot.",
              "example": 6372321
            },
            {
              "type": "string",
              "description": "The ID of a volume snapshot.",
              "example": "fbe805e8-866b-11e6-96bf-000f53315a41"
            }
          ]
        },
        "example": 6372321
      },
      "TagId": {
        "in": "path",
        "name": "tag_id",
        "description": "The name of the tag. Tags may contain letters, numbers, colons, dashes,  and underscores. There is a limit of 255 characters per tag.",
        "required": true,
        "schema": {
          "type": "string",
          "maxLength": 255,
          "pattern": "^[a-zA-Z1-9_\\-\\:]+$"
        },
        "example": "awesome"
      }
    },
    "headers": {
      "ratelimit-limit": {
        "schema": {
          "type": "integer"
        },
        "example": 5000,
        "description": "The default limit on number of requests that can be made per hour and per minute. Current rate limits are 5000 requests per hour and 250 requests per minute."
      },
      "ratelimit-remaining": {
        "schema": {
          "type": "integer"
        },
        "example": 4816,
        "description": "The number of requests in your hourly quota that remain before you hit your request limit. See https://developers.digitalocean.com/documentation/v2/#rate-limit for information about how requests expire."
      },
      "ratelimit-reset": {
        "schema": {
          "type": "integer"
        },
        "example": 1444931833,
        "description": "The time when the oldest request will expire. The value is given in Unix epoch time. See https://developers.digitalocean.com/documentation/v2/#rate-limit for information about how requests expire."
      },
      "x-request-id": {
        "description": "Optionally, some endpoints may include a request ID that should be provided  when reporting bugs or opening support tickets to help identify the issue. ",
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "example": "515850a0-a812-50bf-aa3c-d0d21d287e40"
      }
    },
    "schemas": {
      "error": {
        "type": "object",
        "properties": {
          "id": {
            "description": "A short identifier corresponding to the HTTP status code returned. For  example, the ID for a response returning a 404 status code would be \"not_found.\"",
            "type": "string",
            "example": "not_found"
          },
          "message": {
            "description": "A message providing additional information about the error, including  details to help resolve it when possible.",
            "type": "string",
            "example": "The resource you were accessing could not be found."
          },
          "request_id": {
            "description": "Optionally, some endpoints may include a request ID that should be  provided when reporting bugs or opening support tickets to help  identify the issue.",
            "type": "string",
            "example": "4d9d8375-3c56-4925-a3e7-eb137fed17e9"
          }
        },
        "required": [
          "id",
          "message"
        ]
      },
      "1_click": {
        "type": "object",
        "properties": {
          "slug": {
            "title": "slug",
            "type": "string",
            "example": "monitoring",
            "description": "The slug identifier for the 1-Click application."
          },
          "type": {
            "title": "type",
            "type": "string",
            "example": "kubernetes",
            "description": "The type of the 1-Click application."
          }
        },
        "required": [
          "slug",
          "type"
        ]
      },
      "1_click_create": {
        "type": "object",
        "properties": {
          "addon_slugs": {
            "title": "addon_slugs",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "kube-state-metrics",
              "loki"
            ],
            "default": [],
            "description": "An array of 1-Click Application slugs to be installed to the Kubernetes cluster."
          },
          "cluster_uuid": {
            "title": "cluster_uuid",
            "type": "string",
            "example": "50a994b6-c303-438f-9495-7e896cfe6b08",
            "description": "A unique ID for the Kubernetes cluster to which the 1-Click Applications will be installed."
          }
        },
        "required": [
          "addon_slugs",
          "cluster_uuid"
        ]
      },
      "account": {
        "type": "object",
        "properties": {
          "droplet_limit": {
            "description": "The total number of Droplets current user or team may have active at one time.",
            "type": "integer",
            "example": 25
          },
          "floating_ip_limit": {
            "description": "The total number of Floating IPs the current user or team may have.",
            "type": "integer",
            "example": 5
          },
          "email": {
            "description": "The email address used by the current user to register for DigitalOcean.",
            "type": "string",
            "example": "sammy@digitalocean.com"
          },
          "uuid": {
            "description": "The unique universal identifier for the current user.",
            "type": "string",
            "example": "b6fr89dbf6d9156cace5f3c78dc9851d957381ef"
          },
          "email_verified": {
            "description": "If true, the user has verified their account via email. False otherwise.",
            "type": "boolean",
            "default": false,
            "example": true
          },
          "status": {
            "description": "This value is one of \"active\", \"warning\" or \"locked\".",
            "type": "string",
            "enum": [
              "active",
              "warning",
              "locked"
            ],
            "default": "active",
            "example": "active"
          },
          "status_message": {
            "description": "A human-readable message giving more details about the status of the account.",
            "type": "string",
            "example": " "
          }
        },
        "required": [
          "droplet_limit",
          "floating_ip_limit",
          "email",
          "uuid",
          "email_verified",
          "status",
          "status_message"
        ]
      },
      "wrapped_account": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/account"
          }
        },
        "required": [
          "account"
        ]
      },
      "ssh_key_id": {
        "type": "integer",
        "description": "A unique identification number for this key. Can be used to embed a  specific SSH key into a Droplet.",
        "readOnly": true,
        "example": 512189
      },
      "ssh_key_fingerprint": {
        "type": "string",
        "description": "A unique identifier that differentiates this key from other keys using  a format that SSH recognizes. The fingerprint is created when the key is added to your account.",
        "readOnly": true,
        "example": "3b:16:bf:e4:8b:00:8b:b8:59:8c:a9:d3:f0:19:45:fa"
      },
      "ssh_key_name": {
        "type": "string",
        "description": "A human-readable display name for this key, used to easily identify the SSH keys when they are displayed.",
        "example": "My SSH Public Key"
      },
      "ssh_key": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ssh_key_id"
          },
          "fingerprint": {
            "$ref": "#/components/schemas/ssh_key_fingerprint"
          },
          "public_key": {
            "description": "The entire public key string that was uploaded. Embedded into the root user's authorized_keys file  if you include this key during Droplet creation.",
            "type": "string",
            "example": "ssh-rsa AEXAMPLEaC1yc2EAAAADAQABAAAAQQDDHr/jh2Jy4yALcK4JyWbVkPRaWmhck3IgCoeOO3z1e2dBowLh64QAM+Qb72pxekALga2oi4GvT+TlWNhzPH4V example"
          },
          "name": {
            "$ref": "#/components/schemas/ssh_key_name"
          }
        },
        "required": [
          "id",
          "fingerprint",
          "public_key",
          "name"
        ]
      },
      "LinkToLastPage": {
        "type": "object",
        "properties": {
          "last": {
            "description": "URI of the last page of the results.",
            "type": "string",
            "example": "https://api.digitalocean.com/v2/images?page=2"
          }
        }
      },
      "LinkToNextPage": {
        "type": "object",
        "properties": {
          "next": {
            "description": "URI of the next page of the results.",
            "type": "string",
            "example": "https://api.digitalocean.com/v2/images?page=2"
          }
        }
      },
      "ForwardLinks": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LinkToLastPage"
          },
          {
            "$ref": "#/components/schemas/LinkToNextPage"
          }
        ]
      },
      "LinkToFirstPage": {
        "type": "object",
        "properties": {
          "first": {
            "description": "URI of the first page of the results.",
            "type": "string",
            "example": "https://api.digitalocean.com/v2/images?page=1"
          }
        }
      },
      "LinkToPrevPage": {
        "type": "object",
        "properties": {
          "prev": {
            "description": "URI of the previous page of the results.",
            "type": "string",
            "example": "https://api.digitalocean.com/v2/images?page=1"
          }
        }
      },
      "BackwardLinks": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LinkToFirstPage"
          },
          {
            "$ref": "#/components/schemas/LinkToPrevPage"
          }
        ]
      },
      "PageLinks": {
        "type": "object",
        "properties": {
          "pages": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ForwardLinks"
              },
              {
                "$ref": "#/components/schemas/BackwardLinks"
              },
              {}
            ],
            "example": {
              "pages": {
                "first": "https://api.digitalocean.com/v2/account/keys?page=1",
                "prev": "https://api.digitalocean.com/v2/account/keys?page=2"
              }
            }
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "links": {
            "$ref": "#/components/schemas/PageLinks"
          }
        }
      },
      "meta": {
        "type": "object",
        "properties": {
          "meta": {
            "description": "Information about the response itself.",
            "type": "object",
            "properties": {
              "total": {
                "description": "Number of objects returned by the request.",
                "type": "integer",
                "example": 1
              }
            },
            "required": [
              "total"
            ]
          }
        },
        "required": [
          "meta"
        ]
      },
      "decorated_wrapped_ssh_keys": {
        "description": "A paginated list of your ssh keys.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "ssh_keys": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ssh_key"
                }
              }
            },
            "required": [
              "ssh_keys"
            ]
          },
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "$ref": "#/components/schemas/meta"
          }
        ]
      },
      "wrapped_ssh_key": {
        "type": "object",
        "properties": {
          "ssh_key": {
            "$ref": "#/components/schemas/ssh_key"
          }
        },
        "required": [
          "ssh_key"
        ]
      },
      "region": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The display name of the region.  This will be a full name that is used in the control panel and other interfaces.",
            "example": "New York 3"
          },
          "slug": {
            "type": "string",
            "description": "A human-readable string that is used as a unique identifier for each region.",
            "example": "nyc3"
          },
          "features": {
            "items": {
              "type": "string"
            },
            "description": "This attribute is set to an array which contains features available in this region",
            "example": [
              "private_networking",
              "backups",
              "ipv6",
              "metadata",
              "install_agent",
              "storage",
              "image_transfer"
            ]
          },
          "available": {
            "type": "boolean",
            "description": "This is a boolean value that represents whether new Droplets can be created in this region.",
            "example": true
          },
          "sizes": {
            "items": {
              "type": "string"
            },
            "description": "This attribute is set to an array which contains the identifying slugs for the sizes available in this region.",
            "example": [
              "s-1vcpu-1gb",
              "s-1vcpu-2gb",
              "s-1vcpu-3gb",
              "s-2vcpu-2gb",
              "s-3vcpu-1gb",
              "s-2vcpu-4gb",
              "s-4vcpu-8gb",
              "s-6vcpu-16gb",
              "s-8vcpu-32gb",
              "s-12vcpu-48gb",
              "s-16vcpu-64gb",
              "s-20vcpu-96gb",
              "s-24vcpu-128gb",
              "s-32vcpu-192g"
            ]
          }
        },
        "required": [
          "available",
          "features",
          "name",
          "sizes",
          "slug"
        ]
      },
      "slug": {
        "type": "string",
        "description": "A human-readable string that is used as a unique identifier for each region.",
        "example": "nyc3"
      },
      "action": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "A unique numeric ID that can be used to identify and reference an action.",
            "example": 36804636
          },
          "status": {
            "type": "string",
            "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
            "enum": [
              "in-progress",
              "completed",
              "errored"
            ],
            "example": "completed",
            "default": "in-progress"
          },
          "type": {
            "type": "string",
            "description": "This is the type of action that the object represents. For example, this could be \"transfer\" to represent the state of an image transfer action.",
            "example": "create"
          },
          "started_at": {
            "type": "string",
            "description": "A time value given in ISO8601 combined date and time format that represents when the action was initiated.",
            "format": "date-time",
            "example": "2020-11-14T16:29:21.000Z"
          },
          "completed_at": {
            "type": "string",
            "description": "A time value given in ISO8601 combined date and time format that represents when the action was completed.",
            "format": "date-time",
            "example": "2020-11-14T16:30:06.000Z"
          },
          "resource_id": {
            "type": "integer",
            "description": "A unique identifier for the resource that the action is associated with.",
            "example": 3164444
          },
          "resource_type": {
            "type": "string",
            "description": "The type of resource that the action is associated with.",
            "example": "droplet"
          },
          "region": {
            "$ref": "#/components/schemas/region"
          },
          "region_slug": {
            "allOf": [
              {
                "$ref": "#/components/schemas/slug"
              },
              {
                "type": "string",
                "nullable": true
              }
            ]
          }
        }
      },
      "kernel": {
        "type": "object",
        "description": "**Note**: All Droplets created after March 2017 use internal kernels by default.\nThese Droplets will have this attribute set to `null`.\n\nThe current [kernel](https://www.digitalocean.com/docs/droplets/how-to/kernel/)\nfor Droplets with externally managed kernels. This will initially be set to\nthe kernel of the base image when the Droplet is created.\n",
        "nullable": true,
        "deprecated": true,
        "properties": {
          "id": {
            "type": "integer",
            "example": 7515,
            "description": "A unique number used to identify and reference a specific kernel."
          },
          "name": {
            "type": "string",
            "example": "DigitalOcean GrubLoader v0.2 (20160714)",
            "description": "The display name of the kernel. This is shown in the web UI and is generally a descriptive title for the kernel in question."
          },
          "version": {
            "type": "string",
            "example": "2016.07.13-DigitalOcean_loader_Ubuntu",
            "description": "A standard kernel version string representing the version, patch, and release information."
          }
        }
      },
      "ImageName": {
        "type": "string",
        "description": "The display name that has been given to an image.  This is what is shown in the control panel and is generally a descriptive title for the image in question.",
        "example": "Nifty New Snapshot"
      },
      "distribution": {
        "type": "string",
        "description": "The name of a custom image's distribution. Currently, the valid values are  \"Arch Linux\", \"CentOS\", \"CoreOS\", \"Debian\", \"Fedora\", \"Fedora Atomic\",  \"FreeBSD\", \"Gentoo\", \"openSUSE\", \"RancherOS\", \"Ubuntu\", and \"Unknown\".  Any other value will be accepted but ignored, and \"Unknown\" will be used in its place.",
        "enum": [
          "Arch Linux",
          "CentOS",
          "CoreOS",
          "Debian",
          "Fedora",
          "Fedora Atomic",
          "FreeBSD",
          "Gentoo",
          "openSUSE",
          "RancherOS",
          "Ubuntu",
          "Unknown"
        ],
        "example": "Ubuntu"
      },
      "region_slug": {
        "type": "string",
        "description": "The slug identifier for the region where the resource will initially be  available.",
        "enum": [
          "ams1",
          "ams2",
          "ams3",
          "blr1",
          "fra1",
          "lon1",
          "nyc1",
          "nyc2",
          "nyc3",
          "sfo1",
          "sfo2",
          "sfo3",
          "sgp1",
          "tor1"
        ],
        "example": "nyc3"
      },
      "regions_array": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/region_slug"
        },
        "description": "This attribute is an array of the regions that the image is available in. The regions are represented by their identifying slug values.",
        "example": [
          "nyc1",
          "nyc2"
        ]
      },
      "ImageDescription": {
        "type": "string",
        "description": "An optional free-form text field to describe an image.",
        "example": " "
      },
      "tags_array": {
        "type": "array",
        "description": "A flat array of tag names as strings to be applied to the image.  Tag names may be for either existing or new tags.",
        "example": [
          "base-image",
          "prod"
        ]
      },
      "image": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "A unique number that can be used to identify and reference a specific  image.",
            "example": 7555620,
            "readOnly": true
          },
          "name": {
            "$ref": "#/components/schemas/ImageName"
          },
          "type": {
            "type": "string",
            "description": "Describes the kind of image. It may be one of \"snapshot\", \"backup\", or  \"custom\".  This specifies whether an image is a user-generated Droplet snapshot,  automatically created Droplet backup, or a user-provided virtual machine  image.",
            "enum": [
              "snapshot",
              "backup",
              "custom"
            ],
            "example": "snapshot"
          },
          "distribution": {
            "$ref": "#/components/schemas/distribution"
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "description": "A uniquely identifying string that is associated with each of the  DigitalOcean-provided public images.  These can be used to reference a public image as an alternative to the  numeric id.",
            "example": "nifty1"
          },
          "public": {
            "type": "boolean",
            "description": "This is a boolean value that indicates whether the image in question is  public or not.  An image that is public is available to all accounts. A non-public image  is only accessible from your account.",
            "example": true
          },
          "regions": {
            "$ref": "#/components/schemas/regions_array"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "A time value given in ISO8601 combined date and time format that  represents when the image was created.",
            "example": "2020-05-04T22:23:02.000Z"
          },
          "min_disk_size": {
            "type": "integer",
            "description": "The minimum disk size in GB required for a Droplet to use this image.",
            "example": 20,
            "minimum": 0
          },
          "size_gigabytes": {
            "type": "number",
            "format": "float",
            "description": "The size of the image in gigabytes.",
            "example": 2.34
          },
          "description": {
            "$ref": "#/components/schemas/ImageDescription"
          },
          "tags": {
            "$ref": "#/components/schemas/tags_array"
          },
          "status": {
            "type": "string",
            "description": "A status string indicating the state of a custom image. This may be \"NEW\",\n \"available\", \"pending\", or \"deleted\".",
            "enum": [
              "NEW",
              "available",
              "pending",
              "deleted"
            ],
            "example": "NEW"
          },
          "error_message": {
            "type": "string",
            "description": "A string containing information about errors that may occur when importing\n a custom image.",
            "example": " "
          }
        }
      },
      "size": {
        "type": "object",
        "properties": {
          "slug": {
            "title": "slug",
            "type": "string",
            "example": "s-1vcpu-1gb",
            "description": "A human-readable string that is used to uniquely identify each size."
          },
          "memory": {
            "title": "memory",
            "type": "integer",
            "multipleOf": 8,
            "minimum": 8,
            "example": 1024,
            "description": "The amount of RAM allocated to Droplets created of this size. The value is represented in megabytes."
          },
          "vcpus": {
            "title": "vcpus",
            "type": "integer",
            "example": 1,
            "description": "The integer of number CPUs allocated to Droplets of this size."
          },
          "disk": {
            "title": "disk",
            "type": "integer",
            "example": 25,
            "description": "The amount of disk space set aside for Droplets of this size. The value is represented in gigabytes."
          },
          "transfer": {
            "title": "transfer",
            "type": "number",
            "format": "float",
            "example": 1,
            "description": "The amount of transfer bandwidth that is available for Droplets created in this size. This only counts traffic on the public interface. The value is given in terabytes."
          },
          "price_monthly": {
            "title": "price_monthly",
            "type": "number",
            "format": "float",
            "example": 5,
            "description": "This attribute describes the monthly cost of this Droplet size if the Droplet is kept for an entire month. The value is measured in US dollars."
          },
          "price_hourly": {
            "title": "price_hourly",
            "type": "number",
            "format": "float",
            "example": 0.00743999984115362,
            "description": "This describes the price of the Droplet size as measured hourly. The value is measured in US dollars."
          },
          "regions": {
            "title": "regions",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ams2",
              "ams3",
              "blr1",
              "fra1",
              "lon1",
              "nyc1",
              "nyc2",
              "nyc3",
              "sfo1",
              "sfo2",
              "sfo3",
              "sgp1",
              "tor1"
            ],
            "description": "An array containing the region slugs where this size is available for Droplet creates."
          },
          "available": {
            "title": "available",
            "type": "boolean",
            "default": true,
            "example": true,
            "description": "This is a boolean value that represents whether new Droplets can be created with this size."
          }
        },
        "required": [
          "available",
          "disk",
          "memory",
          "price_hourly",
          "price_monthly",
          "regions",
          "slug",
          "transfer",
          "vcpus"
        ]
      },
      "network_v4": {
        "type": "object",
        "properties": {
          "ip_address": {
            "type": "string",
            "format": "ipv4",
            "example": "104.236.32.182",
            "description": "The IP address of the IPv4 network interface."
          },
          "netmask": {
            "type": "string",
            "format": "ipv4",
            "example": "255.255.192.0",
            "description": "The netmask of the IPv4 network interface."
          },
          "gateway": {
            "type": "string",
            "example": "104.236.0.1",
            "description": "The gateway of the specified IPv4 network interface.\n\nFor private interfaces, a gateway is not provided. This is denoted by\nreturning `nil` as its value.\n"
          },
          "type": {
            "type": "string",
            "enum": [
              "public",
              "private"
            ],
            "example": "public",
            "description": "The type of the IPv4 network interface."
          }
        }
      },
      "network_v6": {
        "type": "object",
        "properties": {
          "ip_address": {
            "type": "string",
            "format": "ipv6",
            "example": "2604:a880:0:1010::18a:a001",
            "description": "The IP address of the IPv6 network interface."
          },
          "netmask": {
            "type": "integer",
            "example": 64,
            "description": "The netmask of the IPv6 network interface."
          },
          "gateway": {
            "type": "string",
            "format": "ipv6",
            "example": "2604:a880:0:1010::1",
            "description": "The gateway of the specified IPv6 network interface."
          },
          "type": {
            "type": "string",
            "enum": [
              "public"
            ],
            "example": "public",
            "description": "The type of the IPv6 network interface.\n\n**Note**: IPv6 private  networking is not currently supported.\n"
          }
        }
      },
      "droplet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 3164444,
            "description": "A unique identifier for each Droplet instance. This is automatically generated upon Droplet creation."
          },
          "name": {
            "type": "string",
            "example": "example.com",
            "description": "The human-readable name set for the Droplet instance."
          },
          "memory": {
            "type": "integer",
            "multipleOf": 8,
            "example": 1024,
            "description": "Memory of the Droplet in megabytes."
          },
          "vcpus": {
            "type": "integer",
            "example": 1,
            "description": "The number of virtual CPUs."
          },
          "disk": {
            "type": "integer",
            "example": 25,
            "description": "The size of the Droplet's disk in gigabytes."
          },
          "locked": {
            "type": "boolean",
            "example": false,
            "description": "A boolean value indicating whether the Droplet has been locked, preventing actions by users."
          },
          "status": {
            "type": "string",
            "enum": [
              "new",
              "active",
              "off",
              "archive"
            ],
            "example": "active",
            "description": "A status string indicating the state of the Droplet instance. This may be \"new\", \"active\", \"off\", or \"archive\"."
          },
          "kernel": {
            "$ref": "#/components/schemas/kernel"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2020-07-21T18:37:44Z",
            "description": "A time value given in ISO8601 combined date and time format that represents when the Droplet was created."
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "backups",
              "private_networking",
              "ipv6"
            ],
            "description": "An array of features enabled on this Droplet."
          },
          "backup_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              53893572
            ],
            "description": "An array of backup IDs of any backups that have been taken of the Droplet instance.  Droplet backups are enabled at the time of the instance creation."
          },
          "next_backup_window": {
            "type": "object",
            "description": "The details of the Droplet's backups feature, if backups are configured for the Droplet. This object contains keys for the start and end times of the window during which the backup will start.",
            "nullable": true,
            "properties": {
              "start": {
                "type": "string",
                "format": "date-time",
                "example": "2019-12-04T00:00:00Z",
                "description": "A time value given in ISO8601 combined date and time format specifying the start of the Droplet's backup window."
              },
              "end": {
                "type": "string",
                "format": "date-time",
                "example": "2019-12-04T23:00:00Z",
                "description": "A time value given in ISO8601 combined date and time format specifying the end of the Droplet's backup window."
              }
            }
          },
          "snapshot_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              67512819
            ],
            "description": "An array of snapshot IDs of any snapshots created from the Droplet instance."
          },
          "image": {
            "$ref": "#/components/schemas/image"
          },
          "volume_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "506f78a4-e098-11e5-ad9f-000f53306ae1"
            ],
            "description": "A flat array including the unique identifier for each Block Storage volume attached to the Droplet."
          },
          "size": {
            "$ref": "#/components/schemas/size"
          },
          "size_slug": {
            "type": "string",
            "example": "s-1vcpu-1gb",
            "description": "The unique slug identifier for the size of this Droplet."
          },
          "networks": {
            "type": "object",
            "description": "The details of the network that are configured for the Droplet instance.  This is an object that contains keys for IPv4 and IPv6.  The value of each of these is an array that contains objects describing an individual IP resource allocated to the Droplet.  These will define attributes like the IP address, netmask, and gateway of the specific network depending on the type of network it is.",
            "properties": {
              "v4": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/network_v4"
                }
              },
              "v6": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/network_v6"
                }
              }
            }
          },
          "region": {
            "$ref": "#/components/schemas/region"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "web",
              "env:prod"
            ],
            "description": "An array of Tags the Droplet has been tagged with."
          },
          "vpc_uuid": {
            "type": "string",
            "example": "760e09ef-dc84-11e8-981e-3cfdfeaae000",
            "description": "A string specifying the UUID of the VPC to which the Droplet is assigned."
          }
        },
        "required": [
          "id",
          "name",
          "memory",
          "vcpus",
          "disk",
          "locked",
          "status",
          "kernel",
          "created_at",
          "features",
          "backup_ids",
          "next_backup_window",
          "snapshot_ids",
          "image",
          "volume_ids",
          "size",
          "size_slug",
          "networks",
          "region",
          "tags",
          "vpc_uuid"
        ]
      },
      "droplet_create": {
        "type": "object",
        "properties": {
          "region": {
            "type": "string",
            "example": "nyc3",
            "description": "The slug identifier for the region that you wish to deploy the Droplet in."
          },
          "size": {
            "type": "string",
            "example": "s-1vcpu-1gb",
            "description": "The slug identifier for the size that you wish to select for this Droplet."
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ],
            "example": "ubuntu-20-04-x64",
            "description": "The image ID of a public or private image or the slug identifier for a public image. This image will be the base image for your Droplet."
          },
          "ssh_keys": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "example": [
              289794,
              "3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45"
            ],
            "default": [],
            "description": "An array containing the IDs or fingerprints of the SSH keys that you wish to embed in the Droplet's root account upon creation."
          },
          "backups": {
            "type": "boolean",
            "example": true,
            "default": false,
            "description": "A boolean indicating whether automated backups should be enabled for the Droplet."
          },
          "ipv6": {
            "type": "boolean",
            "example": true,
            "default": false,
            "description": "A boolean indicating whether to enable IPv6 on the Droplet."
          },
          "monitoring": {
            "type": "boolean",
            "example": true,
            "default": false,
            "description": "A boolean indicating whether to install the DigitalOcean agent for monitoring."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "env:prod",
              "web"
            ],
            "default": [],
            "description": "A flat array of tag names as strings to apply to the Droplet after it is created. Tag names can either be existing or new tags."
          },
          "user_data": {
            "type": "string",
            "example": "#cloud-config\nruncmd:\n  - touch /test.txt\n",
            "description": "A string containing 'user data' which may be used to configure the Droplet on first boot, often a 'cloud-config' file or Bash script. It must be plain text and may not exceed 64 KiB in size."
          },
          "private_networking": {
            "type": "boolean",
            "example": true,
            "default": false,
            "description": "A boolean indicating whether to enable private networking. This will provision the Droplet inside of your account's default VPC for the region. Use the `vpc_uuid` attribute to specify a different VPC."
          },
          "vpc_uuid": {
            "type": "string",
            "example": "760e09ef-dc84-11e8-981e-3cfdfeaae000",
            "description": "A string specifying the UUID of the VPC to which the Droplet will be assigned. If excluded, the Droplet will be assigned to your account's default VPC for the region."
          }
        },
        "required": [
          "region",
          "size",
          "image"
        ]
      },
      "droplet_single_create": {
        "title": "Single Droplet Request",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "example.com",
                "description": "The human-readable string you wish to use when displaying the Droplet name. The name, if set to a domain name managed in the DigitalOcean DNS management system, will configure a PTR record for the Droplet. The name set during creation will also determine the hostname for the Droplet in its internal configuration."
              }
            },
            "required": [
              "name"
            ]
          },
          {
            "$ref": "#/components/schemas/droplet_create"
          }
        ]
      },
      "droplet_multi_create": {
        "title": "Multiple Droplet Request",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "names": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "sub-01.example.com",
                  "sub-02.example.com"
                ],
                "description": "An array of human human-readable strings you wish to use when displaying the Droplet name. Each name, if set to a domain name managed in the DigitalOcean DNS management system, will configure a PTR record for the Droplet. Each name set during creation will also determine the hostname for the Droplet in its internal configuration."
              }
            },
            "required": [
              "names"
            ]
          },
          {
            "$ref": "#/components/schemas/droplet_create"
          }
        ]
      },
      "action_link": {
        "type": "object",
        "description": "The linked actions can be used to check the status of a Droplet's create event.",
        "properties": {
          "id": {
            "type": "integer",
            "example": 7515,
            "description": "A unique numeric ID that can be used to identify and reference an action."
          },
          "rel": {
            "type": "string",
            "example": "create",
            "description": "A string specifying the type of the related action."
          },
          "href": {
            "type": "string",
            "format": "uri",
            "example": "https://api.digitalocean.com/v2/actions/7515",
            "description": "A URL that can be used to access the action."
          }
        }
      },
      "image_update": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/ImageName"
          },
          "distribution": {
            "$ref": "#/components/schemas/distribution"
          },
          "description": {
            "$ref": "#/components/schemas/ImageDescription"
          }
        }
      },
      "image_new_custom": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/image_update"
          },
          {
            "properties": {
              "url": {
                "type": "string",
                "description": "A URL from which the custom Linux virtual machine image may be retrieved.  The image it points to must be in the raw, qcow2, vhdx, vdi, or vmdk format.  It may be compressed using gzip or bzip2 and must be smaller than 100 GB after being decompressed.",
                "example": "http://cloud-images.ubuntu.com/minimal/releases/bionic/release/ubuntu-18.04-minimal-cloudimg-amd64.img"
              },
              "region": {
                "$ref": "#/components/schemas/region_slug"
              },
              "tags": {
                "$ref": "#/components/schemas/tags_array"
              }
            }
          }
        ],
        "required": [
          "name",
          "url",
          "region"
        ],
        "example": {
          "name": "ubuntu-18.04-minimal",
          "url": "http://cloud-images.ubuntu.com/minimal/releases/bionic/release/ubuntu-18.04-minimal-cloudimg-amd64.img",
          "distribution": "Ubuntu",
          "region": "nyc3",
          "description": "Cloud-optimized image w/ small footprint",
          "tags": [
            "base-image",
            "prod"
          ]
        }
      },
      "neighbor_ids": {
        "type": "object",
        "properties": {
          "neighbor_ids": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "description": "An array of arrays. Each array will contain a set of Droplet IDs for Droplets that share a physical server.",
            "example": [
              [
                168671828,
                168663509,
                168671815
              ],
              [
                168671883,
                168671750
              ]
            ]
          }
        }
      },
      "snapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6372321",
            "description": "The unique identifier for the snapshot."
          },
          "name": {
            "type": "string",
            "example": "web-01-1595954862243",
            "description": "A human-readable name for the snapshot."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2020-07-28T16:47:44Z",
            "description": "A time value given in ISO8601 combined date and time format that represents when the snapshot was created."
          },
          "regions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "nyc3",
              "sfo3"
            ],
            "description": "An array of the regions that the snapshot is available in. The regions are represented by their identifying slug values."
          },
          "resource_id": {
            "type": "string",
            "example": "200776916",
            "description": "The unique identifier for the resource that the snapshot originated from."
          },
          "resource_type": {
            "type": "string",
            "enum": [
              "droplet",
              "volume"
            ],
            "example": "droplet",
            "description": "The type of resource that the snapshot originated from."
          },
          "min_disk_size": {
            "type": "integer",
            "example": 25,
            "description": "The minimum size in GB required for a volume or Droplet to use this snapshot."
          },
          "size_gigabytes": {
            "type": "number",
            "format": "float",
            "example": 2.34,
            "description": "The billable size of the snapshot in gigabytes."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "web",
              "env:prod"
            ],
            "description": "An array of Tags the snapshot has been tagged with"
          }
        },
        "required": [
          "id",
          "name",
          "created_at",
          "regions",
          "resource_id",
          "resource_type",
          "min_disk_size",
          "size_gigabytes",
          "tags"
        ]
      },
      "tag_metadata": {
        "type": "object",
        "description": "Tagged Resource Statistics include metadata regarding the resource type that has been tagged.",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The number of tagged objects for this type of resource.",
            "example": 5,
            "minimum": 0
          },
          "last_tagged_uri": {
            "type": "string",
            "description": "The URI for the last tagged object for this type of resource.",
            "example": "https://api.digitalocean.com/v2/images/7555620"
          }
        }
      },
      "tag": {
        "type": "object",
        "description": "A tag is a label that can be applied to a resource (currently Droplets, Images, Volumes, Volume Snapshots, and Database clusters)  in order to better organize or facilitate the lookups and actions on it.\nTags have two attributes: a user defined `name` attribute and an embedded `resources` attribute with information about resources that have been tagged.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the tag. Tags may contain letters, numbers, colons, dashes, and underscores. \nThere is a limit of 255 characters per tag.  \n\n**Note:** Tag names are case stable, which means the capitalization you use when you first create a tag is canonical.\n\nWhen working with tags in the API, you must use the tag's canonical capitalization. For example, if you create a tag named \"PROD\", the URL to add that tag to a resource would be `https://api.digitalocean.com/v2/tags/PROD/resources` (not `/v2/tags/prod/resources`).\n\nTagged resources in the control panel will always display the canonical capitalization. For example, if you create a tag named \"PROD\", you can tag resources in the control panel by entering \"prod\". The tag will still display with its canonical capitalization, \"PROD\".\n",
            "pattern": "^[\\w-:]+$",
            "example": "extra-awesome"
          },
          "resources": {
            "type": "object",
            "description": "An embedded object containing key value pairs of resource type and resource statistics.  It also includes a count of the total number of resources tagged with the current tag as well as a `last_tagged_uri` attribute set to the last resource tagged with the current tag.",
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/tag_metadata"
              },
              {
                "properties": {
                  "droplets": {
                    "$ref": "#/components/schemas/tag_metadata"
                  },
                  "imgages": {
                    "$ref": "#/components/schemas/tag_metadata"
                  },
                  "volumes": {
                    "$ref": "#/components/schemas/tag_metadata"
                  },
                  "volume_snapshots": {
                    "$ref": "#/components/schemas/tag_metadata"
                  },
                  "databases": {
                    "$ref": "#/components/schemas/tag_metadata"
                  }
                }
              }
            ],
            "example": {
              "count": 5,
              "last_tagged_uri": "https://api.digitalocean.com/v2/images/7555620",
              "droplets": {
                "count": 1,
                "last_tagged_uri": "https://api.digitalocean.com/v2/droplets/3164444"
              },
              "images": {
                "count": 1,
                "last_tagged_uri": "https://api.digitalocean.com/v2/images/7555620"
              },
              "volumes": {
                "count": 1,
                "last_tagged_uri": "https://api.digitalocean.com/v2/volumes/3d80cb72-342b-4aaa-b92e-4e4abb24a933"
              },
              "volume_snapshots": {
                "count": 1,
                "last_tagged_uri": "https://api.digitalocean.com/v2/snapshots/1f6f46e8-6b60-11e9-be4e-0a58ac144519"
              },
              "databases": {
                "count": 1,
                "last_tagged_uri": "https://api.digitalocean.com/v2/databases/b92438f6-ba03-416c-b642-e9236db91976"
              }
            }
          }
        }
      },
      "error_with_root_causes": {
        "type": "object",
        "properties": {
          "error": {
            "description": "A message providing information about the error.",
            "type": "string",
            "example": "not_found"
          },
          "messages": {
            "description": "A list of legacy error messages.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "example": null
          },
          "root_causes": {
            "description": "A list of underlying causes for the error, including details to help  resolve it when possible.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": []
          }
        },
        "required": [
          "error",
          "root_causes"
        ]
      }
    },
    "responses": {
      "unexpected_error": {
        "description": "Unexpected error",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            },
            "example": {
              "id": "im_a_teapot",
              "message": "how do you do?"
            }
          }
        }
      },
      "all_1_clicks": {
        "description": "A JSON object with a key of `1_clicks`.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "1-clicks": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/1_click"
                  }
                }
              }
            },
            "examples": {
              "All 1-Click Applications": {
                "value": {
                  "1_clicks": [
                    {
                      "slug": "monitoring",
                      "type": "kubernetes"
                    },
                    {
                      "slug": "wordpress-18-04",
                      "type": "droplet"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "unauthorized": {
        "description": "Unauthorized",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            },
            "example": {
              "id": "unauthorized",
              "message": "Unable to authenticate you."
            }
          }
        }
      },
      "server_error": {
        "description": "Server error.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            },
            "example": {
              "id": "server_error",
              "message": "Unexpected server-side error"
            }
          }
        }
      },
      "1_click_create": {
        "description": "The response will verify that a job has been successfully created to install a 1-Click. The\npost-installation lifecycle of a 1-Click application can not be managed via the DigitalOcean\nAPI. For additional details specific to the 1-Click, find and view its\n[DigitalOcean Marketplace](https://marketplace.digitalocean.com) page.\n",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "A message about the result of the request.",
                  "example": "Successfully kicked off addon job."
                }
              }
            },
            "examples": {
              "Install a 1-Click Application": {
                "value": {
                  "message": "Successfully kicked off addon job."
                }
              }
            }
          }
        }
      },
      "all_keys": {
        "description": "A JSON object with the key set to `ssh_keys`. The value is an array of `ssh_key` objects, each of which contains the standard `ssh_key` attributes.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/decorated_wrapped_ssh_keys"
            },
            "examples": {
              "FirstPage": {
                "value": {
                  "ssh_keys": [
                    {
                      "id": 289794,
                      "fingerprint": "3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45",
                      "public_key": "ssh-rsa ANOTHEREXAMPLEaC1yc2EAAAADAQABAAAAQQDDHr/jh2Jy4yALcK4JyWbVkPRaWmhck3IgCoeOO3z1e2dBowLh64QAM+Qb72pxekALga2oi4GvT+TlWNhzPH4V anotherexample",
                      "name": "Other Public Key"
                    }
                  ],
                  "links": {
                    "pages": {
                      "last": "https://api.digitalocean.com/v2/account/keys?page=2",
                      "next": "https://api.digitalocean.com/v2/account/keys?page=2"
                    }
                  },
                  "meta": {
                    "total": 3
                  }
                }
              },
              "LastPage": {
                "value": {
                  "ssh_keys": [
                    {
                      "id": 289794,
                      "fingerprint": "3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45",
                      "public_key": "ssh-rsa ANOTHEREXAMPLEaC1yc2EAAAADAQABAAAAQQDDHr/jh2Jy4yALcK4JyWbVkPRaWmhck3IgCoeOO3z1e2dBowLh64QAM+Qb72pxekALga2oi4GvT+TlWNhzPH4V anotherexample",
                      "name": "Other Public Key"
                    }
                  ],
                  "links": {
                    "pages": {
                      "first": "https://api.digitalocean.com/v2/account/keys?page=1",
                      "prev": "https://api.digitalocean.com/v2/account/keys?page=1"
                    }
                  },
                  "meta": {
                    "total": 3
                  }
                }
              },
              "MiddlePage": {
                "value": {
                  "ssh_keys": [
                    {
                      "id": 289794,
                      "fingerprint": "3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45",
                      "public_key": "ssh-rsa ANOTHEREXAMPLEaC1yc2EAAAADAQABAAAAQQDDHr/jh2Jy4yALcK4JyWbVkPRaWmhck3IgCoeOO3z1e2dBowLh64QAM+Qb72pxekALga2oi4GvT+TlWNhzPH4V anotherexample",
                      "name": "Other Public Key"
                    }
                  ],
                  "links": {
                    "pages": {
                      "first": "https://api.digitalocean.com/v2/account/keys?page=1",
                      "prev": "https://api.digitalocean.com/v2/account/keys?page=2",
                      "last": "https://api.digitalocean.com/v2/account/keys?page=4",
                      "next": "https://api.digitalocean.com/v2/account/keys?page=5"
                    }
                  },
                  "meta": {
                    "total": 9
                  }
                }
              },
              "NoPagination": {
                "value": {
                  "ssh_keys": [
                    {
                      "id": 289794,
                      "fingerprint": "3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45",
                      "public_key": "ssh-rsa ANOTHEREXAMPLEaC1yc2EAAAADAQABAAAAQQDDHr/jh2Jy4yALcK4JyWbVkPRaWmhck3IgCoeOO3z1e2dBowLh64QAM+Qb72pxekALga2oi4GvT+TlWNhzPH4V anotherexample",
                      "name": "Other Public Key"
                    }
                  ],
                  "links": {},
                  "meta": {
                    "total": 1
                  }
                }
              }
            }
          }
        }
      },
      "existing_key": {
        "description": "A JSON object with the key set to `ssh_key`. The value is an `ssh_key` object  containing the standard `ssh_key` attributes.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/wrapped_ssh_key"
            }
          }
        },
        "links": {
          "GetSSHKeyById": {
            "$ref": "#/components/links/get_ssh_key_by_id"
          },
          "GetSSHKeyByFingerprint": {
            "$ref": "#/components/links/get_ssh_key_by_fingerprint"
          },
          "DeleteSSHKeyById": {
            "$ref": "#/components/links/delete_ssh_key_by_id"
          },
          "DeleteSSHKeyByFingerprint": {
            "$ref": "#/components/links/delete_ssh_key_by_fingerprint"
          }
        }
      },
      "not_found": {
        "description": "The resource was not found.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            },
            "example": {
              "id": "not_found",
              "message": "The resource you requested could not be found."
            }
          }
        }
      },
      "no_content": {
        "description": "The action was successful and the response body is empty.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        }
      },
      "all_actions": {
        "description": "The results will be returned as a JSON object with an actions key.  This will be set to an array filled with action objects containing the standard action attributes",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "actions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/action"
                      }
                    }
                  }
                },
                {
                  "$ref": "#/components/schemas/Pagination"
                },
                {
                  "$ref": "#/components/schemas/meta"
                }
              ]
            }
          }
        }
      },
      "existing_action": {
        "description": "The result will be a JSON object with an action key.  This will be set to an action object containing the standard action attributes.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/action"
            }
          }
        }
      },
      "all_droplets": {
        "description": "A JSON object with a key of `droplets`.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "droplets": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/droplet"
                      }
                    }
                  }
                },
                {
                  "$ref": "#/components/schemas/Pagination"
                },
                {
                  "$ref": "#/components/schemas/meta"
                }
              ]
            },
            "examples": {
              "All Droplets": {
                "$ref": "#/components/examples/DropletsAll"
              },
              "Droplets Filtered By Tag": {
                "$ref": "#/components/examples/DropletsTagged"
              }
            }
          }
        }
      },
      "droplet_create": {
        "description": "Created",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "title": "Single Droplet Response",
                  "properties": {
                    "droplet": {
                      "$ref": "#/components/schemas/droplet"
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "actions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/action_link"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "title": "Multiple Droplet Response",
                  "properties": {
                    "droplets": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/droplet"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "actions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/action_link"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "Single Droplet Create Response": {
                "$ref": "#/components/examples/DropletCreateResponse"
              },
              "Multiple Droplet Create Response": {
                "$ref": "#/components/examples/DropletMultiCreateResponse"
              }
            }
          }
        }
      },
      "existing_droplet": {
        "description": "The response will be a JSON object with a key called `droplet`. This will be\nset to a JSON object that contains the standard Droplet attributes.\n",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "droplet": {
                  "$ref": "#/components/schemas/droplet"
                }
              }
            },
            "examples": {
              "Single Droplet": {
                "$ref": "#/components/examples/DropletSingle"
              }
            }
          }
        }
      },
      "all_kernels": {
        "description": "A JSON object that has a key called `kernels`.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "kernels": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/kernel"
                      }
                    }
                  }
                },
                {
                  "$ref": "#/components/schemas/Pagination"
                },
                {
                  "$ref": "#/components/schemas/meta"
                }
              ]
            },
            "example": {
              "kernels": [
                {
                  "id": 7515,
                  "name": "DigitalOcean GrubLoader v0.2 (20160714)",
                  "version": "2016.07.13-DigitalOcean_loader_Ubuntu"
                }
              ],
              "links": {
                "pages": {
                  "next": "https://api.digitalocean.com/v2/droplets/3164444/kernels?page=2&per_page=1",
                  "last": "https://api.digitalocean.com/v2/droplets/3164444/kernels?page=171&per_page=1"
                }
              },
              "meta": {
                "total": 171
              }
            }
          }
        }
      },
      "neighbor_droplets": {
        "description": "A JSON object with an `droplets` key.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "droplets": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/droplet"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "all_images": {
        "description": "The response will be a JSON object with a key called `images`.  This will be set to an array of image objects, each of which will contain the standard image attributes.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "images": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/image"
                      }
                    }
                  },
                  "required": [
                    "images"
                  ]
                },
                {
                  "$ref": "#/components/schemas/Pagination"
                },
                {
                  "$ref": "#/components/schemas/meta"
                }
              ]
            },
            "examples": {
              "All": {
                "$ref": "#/components/examples/images_all"
              },
              "Snapshots": {
                "$ref": "#/components/examples/images_snapshots"
              },
              "Distribution": {
                "$ref": "#/components/examples/images_distribution"
              },
              "Custom": {
                "$ref": "#/components/examples/images_custom"
              },
              "Application": {
                "$ref": "#/components/examples/images_application"
              },
              "Tagged": {
                "$ref": "#/components/examples/images_tagged"
              }
            }
          }
        }
      },
      "new_custom_image": {
        "description": "The response will be a JSON object with a key set to `image`.  The value of this will be an image object containing a subset of the standard  image attributes as listed below, including the image's `id` and `status`.  After initial creation, the `status` will be `NEW`. Using the image's id, you  may query the image's status by sending a `GET` request to the  `/v2/images/$IMAGE_ID` endpoint.  When the `status` changes to `available`, the image will be ready for use.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "image": {
                  "$ref": "#/components/schemas/image"
                }
              }
            },
            "example": {
              "image": {
                "created_at": "2018-09-20T19:28:00Z",
                "description": "Cloud-optimized image w/ small footprint",
                "distribution": "Ubuntu",
                "error_message": "",
                "id": 38413969,
                "name": "ubuntu-18.04-minimal",
                "regions": [],
                "type": "custom",
                "tags": [
                  "base-image",
                  "prod"
                ],
                "status": "NEW"
              }
            }
          }
        }
      },
      "existing_image": {
        "description": "The response will be a JSON object with a key called `image`.  The value of this will be an image object containing the standard image attributes.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "image": {
                  "$ref": "#/components/schemas/image"
                }
              },
              "required": [
                "image"
              ]
            },
            "example": {
              "image": {
                "id": 6918990,
                "name": "14.04 x64",
                "distribution": "Ubuntu",
                "slug": "ubuntu-16-04-x64",
                "public": true,
                "regions": [
                  "nyc1",
                  "ams1",
                  "sfo1",
                  "nyc2",
                  "ams2",
                  "sgp1",
                  "lon1",
                  "nyc3",
                  "ams3",
                  "nyc3"
                ],
                "created_at": "2014-10-17T20:24:33Z",
                "min_disk_size": 20,
                "size_gigabytes": 2.34,
                "description": "",
                "tags": [],
                "status": "available",
                "error_message": ""
              }
            }
          }
        }
      },
      "updated_image": {
        "description": "The response will be a JSON object with a key set to `image`.  The value of this will be an image object containing the standard image attributes.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "image": {
                  "$ref": "#/components/schemas/image"
                }
              },
              "required": [
                "image"
              ]
            },
            "example": {
              "image": {
                "id": 7938391,
                "name": "new-image-name",
                "distribution": "Ubuntu",
                "slug": null,
                "public": false,
                "regions": [
                  "nyc3",
                  "nyc3"
                ],
                "created_at": "2014-11-14T16:44:03Z",
                "min_disk_size": 20,
                "size_gigabytes": 2.34,
                "description": "",
                "tags": [],
                "status": "available",
                "error_message": ""
              }
            }
          }
        }
      },
      "all_regions": {
        "description": "A JSON object with a key set to `regions`. The value is an array of `region` objects, each of which contain the standard `region` attributes.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "regions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/region"
                      }
                    }
                  },
                  "required": [
                    "regions"
                  ]
                },
                {
                  "$ref": "#/components/schemas/Pagination"
                },
                {
                  "$ref": "#/components/schemas/meta"
                }
              ]
            },
            "example": {
              "regions": [
                {
                  "name": "New York 3",
                  "slug": "nyc3",
                  "features": [
                    "private_networking",
                    "backups",
                    "ipv6",
                    "metadata",
                    "install_agent",
                    "storage",
                    "image_transfer"
                  ],
                  "available": true,
                  "sizes": [
                    "s-1vcpu-1gb",
                    "s-1vcpu-2gb",
                    "s-1vcpu-3gb",
                    "s-2vcpu-2gb",
                    "s-3vcpu-1gb",
                    "s-2vcpu-4gb",
                    "s-4vcpu-8gb",
                    "s-6vcpu-16gb",
                    "s-8vcpu-32gb",
                    "s-12vcpu-48gb",
                    "s-16vcpu-64gb",
                    "s-20vcpu-96gb",
                    "s-24vcpu-128gb",
                    "s-32vcpu-192g"
                  ]
                }
              ],
              "links": {
                "pages": {
                  "last": "https://api.digitalocean.com/v2/regions?page=13&per_page=1",
                  "next": "https://api.digitalocean.com/v2/regions?page=2&per_page=1"
                }
              },
              "meta": {
                "total": 13
              }
            }
          }
        }
      },
      "droplet_neighbors_ids": {
        "description": "A JSON object with an `neighbor_ids` key.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/neighbor_ids"
            }
          }
        }
      },
      "all_sizes": {
        "description": "A JSON object with a key called `sizes`. The value of this will be an array of `size` objects each of which contain the standard size attributes.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "sizes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/size"
                      }
                    }
                  },
                  "required": [
                    "sizes"
                  ]
                },
                {
                  "$ref": "#/components/schemas/Pagination"
                },
                {
                  "$ref": "#/components/schemas/meta"
                }
              ]
            },
            "example": {
              "sizes": [
                {
                  "slug": "s-1vcpu-1gb",
                  "memory": 1024,
                  "vcpus": 1,
                  "disk": 25,
                  "transfer": 1,
                  "price_monthly": 5,
                  "price_hourly": 0.00743999984115362,
                  "regions": [
                    "ams2",
                    "ams3",
                    "blr1",
                    "fra1",
                    "lon1",
                    "nyc1",
                    "nyc2",
                    "nyc3",
                    "sfo1",
                    "sfo2",
                    "sfo3",
                    "sgp1",
                    "tor1"
                  ],
                  "available": true
                }
              ],
              "links": {
                "pages": {
                  "last": "https://api.digitalocean.com/v2/sizes?page=64&per_page=1",
                  "next": "https://api.digitalocean.com/v2/sizes?page=2&per_page=1"
                }
              },
              "meta": {
                "total": 64
              }
            }
          }
        }
      },
      "all_snapshots": {
        "description": "A JSON object with a key of `snapshots`.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "snapshots": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/snapshot"
                      }
                    }
                  }
                },
                {
                  "$ref": "#/components/schemas/Pagination"
                },
                {
                  "$ref": "#/components/schemas/meta"
                }
              ]
            },
            "examples": {
              "All Snapshots": {
                "$ref": "#/components/examples/SnapshotsAll"
              },
              "Droplets Snapshots": {
                "$ref": "#/components/examples/SnapshotsDropletsOnly"
              },
              "Volume Snapshots": {
                "$ref": "#/components/examples/SnapshotsVolumesOnly"
              }
            }
          }
        }
      },
      "existing_snapshot": {
        "description": "A JSON object with a key called `snapshot`.\n",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "snapshot": {
                  "$ref": "#/components/schemas/snapshot"
                }
              }
            }
          }
        }
      },
      "all_tags": {
        "description": "To list all of your tags, you can send a `GET` request to `/v2/tags`.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/tag"
                      }
                    }
                  }
                },
                {
                  "$ref": "#/components/schemas/Pagination"
                },
                {
                  "$ref": "#/components/schemas/meta"
                }
              ]
            },
            "example": {
              "tags": [
                {
                  "name": "extra-awesome",
                  "resources": {
                    "count": 5,
                    "last_tagged_uri": "https://api.digitalocean.com/v2/images/7555620",
                    "droplets": {
                      "count": 1,
                      "last_tagged_uri": "https://api.digitalocean.com/v2/droplets/3164444"
                    },
                    "images": {
                      "count": 1,
                      "last_tagged_uri": "https://api.digitalocean.com/v2/images/7555620"
                    },
                    "volumes": {
                      "count": 1,
                      "last_tagged_uri": "https://api.digitalocean.com/v2/volumes/3d80cb72-342b-4aaa-b92e-4e4abb24a933"
                    },
                    "volume_snapshots": {
                      "count": 1,
                      "last_tagged_uri": "https://api.digitalocean.com/v2/snapshots/1f6f46e8-6b60-11e9-be4e-0a58ac144519"
                    },
                    "databases": {
                      "count": 1,
                      "last_tagged_uri": "https://api.digitalocean.com/v2/databases/b92438f6-ba03-416c-b642-e9236db91976"
                    }
                  }
                }
              ],
              "links": {},
              "meta": {
                "total": 1
              }
            }
          }
        }
      },
      "new_tag": {
        "description": "The response will be a JSON object with a key called tag.  The value of this will be a tag object containing the standard tag attributes",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/tag"
            },
            "example": {
              "tag": {
                "name": "extra-awesome",
                "resources": {
                  "count": 0,
                  "droplets": {
                    "count": 0
                  },
                  "images": {
                    "count": 0
                  },
                  "volumes": {
                    "count": 0
                  },
                  "volume_snapshots": {
                    "count": 0
                  },
                  "databases": {
                    "count": 0
                  }
                }
              }
            }
          }
        }
      },
      "bad_request": {
        "description": "Bad Request",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          },
          "x-request-id": {
            "$ref": "#/components/headers/x-request-id"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error_with_root_causes"
            },
            "examples": {
              "InvalidCharacters": {
                "value": {
                  "error": "Error validating resource tag: \\\"tag-name \\\\\\\"здорово\\\\\\\" contains invalid characters\\\"",
                  "message": null,
                  "root_causes": [
                    "rpc error: code = InvalidArgument desc = Error validating resource tag: \\\"tag-name \\\\\\\"здорово\\\\\\\" contains invalid characters\\\""
                  ]
                }
              }
            }
          }
        }
      },
      "existing_tag": {
        "description": "The response will be a JSON object with a key called `tag`.  The value of this will be a tag object containing the standard tag attributes.",
        "headers": {
          "ratelimit-limit": {
            "$ref": "#/components/headers/ratelimit-limit"
          },
          "ratelimit-remaining": {
            "$ref": "#/components/headers/ratelimit-remaining"
          },
          "ratelimit-reset": {
            "$ref": "#/components/headers/ratelimit-reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "tag": {
                  "$ref": "#/components/schemas/tag"
                }
              }
            },
            "example": {
              "tag": {
                "tag": {
                  "name": "extra-awesome",
                  "resources": {
                    "count": 5,
                    "last_tagged_uri": "https://api.digitalocean.com/v2/images/7555620",
                    "droplets": {
                      "count": 1,
                      "last_tagged_uri": "https://api.digitalocean.com/v2/droplets/3164444"
                    },
                    "images": {
                      "count": 1,
                      "last_tagged_uri": "https://api.digitalocean.com/v2/images/7555620"
                    },
                    "volumes": {
                      "count": 1,
                      "last_tagged_uri": "https://api.digitalocean.com/v2/volumes/3d80cb72-342b-4aaa-b92e-4e4abb24a933"
                    },
                    "volume_snapshots": {
                      "count": 1,
                      "last_tagged_uri": "https://api.digitalocean.com/v2/snapshots/1f6f46e8-6b60-11e9-be4e-0a58ac144519"
                    },
                    "databases": {
                      "count": 1,
                      "last_tagged_uri": "https://api.digitalocean.com/v2/databases/b92438f6-ba03-416c-b642-e9236db91976"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "links": {
      "get_ssh_key_by_id": {
        "operationId": "retrieve_an_existing_key",
        "parameters": {
          "ssh_key_identifier": "$response.body#/ssh_key/id"
        },
        "description": "The `id` value returned in the response can be used as the  `ssh_key_identifier` parameter in `GET /v2/account/keys/{ssh_key_identifier}`."
      },
      "get_ssh_key_by_fingerprint": {
        "operationId": "retrieve_an_existing_key",
        "parameters": {
          "ssh_key_identifier": "$response.body#/ssh_key/fingerprint"
        },
        "description": "The `fingerprint` value returned in the response can be used as the  `ssh_key_identifier` parameter in `GET /v2/account/keys/{ssh_key_identifier}`."
      },
      "delete_ssh_key_by_id": {
        "operationId": "destroy_a_key",
        "parameters": {
          "ssh_key_identifier": "$response.body#/ssh_key/id"
        },
        "description": "The `id` value returned in the response can be used as the  `ssh_key_identifier` parameter in `DELETE /v2/account/keys/{ssh_key_identifier}`."
      },
      "delete_ssh_key_by_fingerprint": {
        "operationId": "destroy_a_key",
        "parameters": {
          "ssh_key_identifier": "$response.body#/ssh_key/fingerprint"
        },
        "description": "The `fingerprint` value returned in the response can be used as the  `ssh_key_identifier` parameter in `DELETE /v2/account/keys/{ssh_key_identifier}`."
      }
    },
    "examples": {
      "DropletsAll": {
        "value": {
          "droplets": [
            {
              "id": 3164444,
              "name": "example.com",
              "memory": 1024,
              "vcpus": 1,
              "disk": 25,
              "locked": false,
              "status": "active",
              "kernel": null,
              "created_at": "2020-07-21T18:37:44Z",
              "features": [
                "backups",
                "private_networking",
                "ipv6"
              ],
              "backup_ids": [
                53893572
              ],
              "next_backup_window": {
                "start": "2020-07-30T00:00:00Z",
                "end": "2020-07-30T23:00:00Z"
              },
              "snapshot_ids": [
                67512819
              ],
              "image": {
                "id": 63663980,
                "name": "20.04 (LTS) x64",
                "distribution": "Ubuntu",
                "slug": "ubuntu-20-04-x64",
                "public": true,
                "regions": [
                  "ams2",
                  "ams3",
                  "blr1",
                  "fra1",
                  "lon1",
                  "nyc1",
                  "nyc2",
                  "nyc3",
                  "sfo1",
                  "sfo2",
                  "sfo3",
                  "sgp1",
                  "tor1"
                ],
                "created_at": "2020-05-15T05:47:50Z",
                "type": "snapshot",
                "min_disk_size": 20,
                "size_gigabytes": 2.36,
                "description": "",
                "tags": [],
                "status": "available",
                "error_message": ""
              },
              "volume_ids": [],
              "size": {
                "slug": "s-1vcpu-1gb",
                "memory": 1024,
                "vcpus": 1,
                "disk": 25,
                "transfer": 1,
                "price_monthly": 5,
                "price_hourly": 0.00743999984115362,
                "regions": [
                  "ams2",
                  "ams3",
                  "blr1",
                  "fra1",
                  "lon1",
                  "nyc1",
                  "nyc2",
                  "nyc3",
                  "sfo1",
                  "sfo2",
                  "sfo3",
                  "sgp1",
                  "tor1"
                ],
                "available": true
              },
              "size_slug": "s-1vcpu-1gb",
              "networks": {
                "v4": [
                  {
                    "ip_address": "10.128.192.124",
                    "netmask": "255.255.0.0",
                    "gateway": "nil",
                    "type": "private"
                  },
                  {
                    "ip_address": "192.241.165.154",
                    "netmask": "255.255.255.0",
                    "gateway": "192.241.165.1",
                    "type": "public"
                  }
                ],
                "v6": [
                  {
                    "ip_address": "2604:a880:0:1010::18a:a001",
                    "netmask": 64,
                    "gateway": "2604:a880:0:1010::1",
                    "type": "public"
                  }
                ]
              },
              "region": {
                "name": "New York 3",
                "slug": "nyc3",
                "features": [
                  "private_networking",
                  "backups",
                  "ipv6",
                  "metadata",
                  "install_agent",
                  "storage",
                  "image_transfer"
                ],
                "available": true,
                "sizes": [
                  "s-1vcpu-1gb",
                  "s-1vcpu-2gb",
                  "s-1vcpu-3gb",
                  "s-2vcpu-2gb",
                  "s-3vcpu-1gb",
                  "s-2vcpu-4gb",
                  "s-4vcpu-8gb",
                  "s-6vcpu-16gb",
                  "s-8vcpu-32gb",
                  "s-12vcpu-48gb",
                  "s-16vcpu-64gb",
                  "s-20vcpu-96gb",
                  "s-24vcpu-128gb",
                  "s-32vcpu-192g"
                ]
              },
              "tags": [
                "web",
                "env:prod"
              ],
              "vpc_uuid": "760e09ef-dc84-11e8-981e-3cfdfeaae000"
            },
            {
              "id": 3164459,
              "name": "assets.example.com",
              "memory": 1024,
              "vcpus": 1,
              "disk": 25,
              "locked": false,
              "status": "active",
              "kernel": null,
              "created_at": "2020-07-21T18:42:27Z",
              "features": [
                "private_networking"
              ],
              "backup_ids": [],
              "next_backup_window": {
                "start": "2020-07-30T00:00:00Z",
                "end": "2020-07-30T23:00:00Z"
              },
              "snapshot_ids": [],
              "image": {
                "id": 63663980,
                "name": "20.04 (LTS) x64",
                "distribution": "Ubuntu",
                "slug": "ubuntu-20-04-x64",
                "public": true,
                "regions": [
                  "ams2",
                  "ams3",
                  "blr1",
                  "fra1",
                  "lon1",
                  "nyc1",
                  "nyc2",
                  "nyc3",
                  "sfo1",
                  "sfo2",
                  "sfo3",
                  "sgp1",
                  "tor1"
                ],
                "created_at": "2020-05-15T05:47:50Z",
                "type": "snapshot",
                "min_disk_size": 20,
                "size_gigabytes": 2.36,
                "description": "",
                "tags": [],
                "status": "available",
                "error_message": ""
              },
              "volume_ids": [
                "506f78a4-e098-11e5-ad9f-000f53306ae1"
              ],
              "size": {
                "slug": "s-1vcpu-1gb",
                "memory": 1024,
                "vcpus": 1,
                "disk": 25,
                "transfer": 1,
                "price_monthly": 5,
                "price_hourly": 0.00743999984115362,
                "regions": [
                  "ams2",
                  "ams3",
                  "blr1",
                  "fra1",
                  "lon1",
                  "nyc1",
                  "nyc2",
                  "nyc3",
                  "sfo1",
                  "sfo2",
                  "sfo3",
                  "sgp1",
                  "tor1"
                ],
                "available": true
              },
              "size_slug": "s-1vcpu-1gb",
              "networks": {
                "v4": [
                  {
                    "ip_address": "10.128.192.138",
                    "netmask": "255.255.0.0",
                    "gateway": "nil",
                    "type": "private"
                  },
                  {
                    "ip_address": "162.243.0.4",
                    "netmask": "255.255.255.0",
                    "gateway": "162.243.0.1",
                    "type": "public"
                  }
                ],
                "v6": []
              },
              "region": {
                "name": "New York 3",
                "slug": "nyc3",
                "features": [
                  "private_networking",
                  "backups",
                  "ipv6",
                  "metadata",
                  "install_agent",
                  "storage",
                  "image_transfer"
                ],
                "available": true,
                "sizes": [
                  "s-1vcpu-1gb",
                  "s-1vcpu-2gb",
                  "s-1vcpu-3gb",
                  "s-2vcpu-2gb",
                  "s-3vcpu-1gb",
                  "s-2vcpu-4gb",
                  "s-4vcpu-8gb",
                  "s-6vcpu-16gb",
                  "s-8vcpu-32gb",
                  "s-12vcpu-48gb",
                  "s-16vcpu-64gb",
                  "s-20vcpu-96gb",
                  "s-24vcpu-128gb",
                  "s-32vcpu-192g"
                ]
              },
              "tags": [
                "storage",
                "env:prod"
              ],
              "vpc_uuid": "760e09ef-dc84-11e8-981e-3cfdfeaae000"
            },
            {
              "id": 3164412,
              "name": "stage.example.com",
              "memory": 1024,
              "vcpus": 1,
              "disk": 25,
              "locked": false,
              "status": "active",
              "kernel": null,
              "created_at": "2020-07-21T18:32:55Z",
              "features": [
                "private_networking"
              ],
              "backup_ids": [],
              "next_backup_window": {
                "start": "2020-07-30T00:00:00Z",
                "end": "2020-07-30T23:00:00Z"
              },
              "snapshot_ids": [],
              "image": {
                "id": 63663980,
                "name": "20.04 (LTS) x64",
                "distribution": "Ubuntu",
                "slug": "ubuntu-20-04-x64",
                "public": true,
                "regions": [
                  "ams2",
                  "ams3",
                  "blr1",
                  "fra1",
                  "lon1",
                  "nyc1",
                  "nyc2",
                  "nyc3",
                  "sfo1",
                  "sfo2",
                  "sfo3",
                  "sgp1",
                  "tor1"
                ],
                "created_at": "2020-05-15T05:47:50Z",
                "type": "snapshot",
                "min_disk_size": 20,
                "size_gigabytes": 2.36,
                "description": "",
                "tags": [],
                "status": "available",
                "error_message": ""
              },
              "volume_ids": [
                "7724db7c-e098-11e5-b522-000f53304e51"
              ],
              "size": {
                "slug": "s-1vcpu-1gb",
                "memory": 1024,
                "vcpus": 1,
                "disk": 25,
                "transfer": 1,
                "price_monthly": 5,
                "price_hourly": 0.00743999984115362,
                "regions": [
                  "ams2",
                  "ams3",
                  "blr1",
                  "fra1",
                  "lon1",
                  "nyc1",
                  "nyc2",
                  "nyc3",
                  "sfo1",
                  "sfo2",
                  "sfo3",
                  "sgp1",
                  "tor1"
                ],
                "available": true
              },
              "size_slug": "s-1vcpu-1gb",
              "networks": {
                "v4": [
                  {
                    "ip_address": "10.128.192.125",
                    "netmask": "255.255.0.0",
                    "gateway": "nil",
                    "type": "private"
                  },
                  {
                    "ip_address": "192.241.247.248",
                    "netmask": "255.255.255.0",
                    "gateway": "192.241.247.1",
                    "type": "public"
                  }
                ],
                "v6": []
              },
              "region": {
                "name": "New York 3",
                "slug": "nyc3",
                "features": [
                  "private_networking",
                  "backups",
                  "ipv6",
                  "metadata",
                  "install_agent",
                  "storage",
                  "image_transfer"
                ],
                "available": true,
                "sizes": [
                  "s-1vcpu-1gb",
                  "s-1vcpu-2gb",
                  "s-1vcpu-3gb",
                  "s-2vcpu-2gb",
                  "s-3vcpu-1gb",
                  "s-2vcpu-4gb",
                  "s-4vcpu-8gb",
                  "s-6vcpu-16gb",
                  "s-8vcpu-32gb",
                  "s-12vcpu-48gb",
                  "s-16vcpu-64gb",
                  "s-20vcpu-96gb",
                  "s-24vcpu-128gb",
                  "s-32vcpu-192g"
                ]
              },
              "tags": [
                "env:stage"
              ],
              "vpc_uuid": "5a4981aa-9653-4bd1-bef5-d6bff52042e4"
            }
          ],
          "links": {
            "pages": {}
          },
          "meta": {
            "total": 3
          }
        }
      },
      "DropletsTagged": {
        "value": {
          "droplets": [
            {
              "id": 3164444,
              "name": "example.com",
              "memory": 1024,
              "vcpus": 1,
              "disk": 25,
              "locked": false,
              "status": "active",
              "kernel": null,
              "created_at": "2020-07-21T18:37:44Z",
              "features": [
                "backups",
                "private_networking",
                "ipv6"
              ],
              "backup_ids": [
                53893572
              ],
              "next_backup_window": {
                "start": "2020-07-30T00:00:00Z",
                "end": "2020-07-30T23:00:00Z"
              },
              "snapshot_ids": [
                67512819
              ],
              "image": {
                "id": 63663980,
                "name": "20.04 (LTS) x64",
                "distribution": "Ubuntu",
                "slug": "ubuntu-20-04-x64",
                "public": true,
                "regions": [
                  "ams2",
                  "ams3",
                  "blr1",
                  "fra1",
                  "lon1",
                  "nyc1",
                  "nyc2",
                  "nyc3",
                  "sfo1",
                  "sfo2",
                  "sfo3",
                  "sgp1",
                  "tor1"
                ],
                "created_at": "2020-05-15T05:47:50Z",
                "type": "snapshot",
                "min_disk_size": 20,
                "size_gigabytes": 2.36,
                "description": "",
                "tags": [],
                "status": "available",
                "error_message": ""
              },
              "volume_ids": [],
              "size": {
                "slug": "s-1vcpu-1gb",
                "memory": 1024,
                "vcpus": 1,
                "disk": 25,
                "transfer": 1,
                "price_monthly": 5,
                "price_hourly": 0.00743999984115362,
                "regions": [
                  "ams2",
                  "ams3",
                  "blr1",
                  "fra1",
                  "lon1",
                  "nyc1",
                  "nyc2",
                  "nyc3",
                  "sfo1",
                  "sfo2",
                  "sfo3",
                  "sgp1",
                  "tor1"
                ],
                "available": true
              },
              "size_slug": "s-1vcpu-1gb",
              "networks": {
                "v4": [
                  {
                    "ip_address": "10.128.192.124",
                    "netmask": "255.255.0.0",
                    "gateway": "nil",
                    "type": "private"
                  },
                  {
                    "ip_address": "192.241.165.154",
                    "netmask": "255.255.255.0",
                    "gateway": "192.241.165.1",
                    "type": "public"
                  }
                ],
                "v6": [
                  {
                    "ip_address": "2604:a880:0:1010::18a:a001",
                    "netmask": 64,
                    "gateway": "2604:a880:0:1010::1",
                    "type": "public"
                  }
                ]
              },
              "region": {
                "name": "New York 3",
                "slug": "nyc3",
                "features": [
                  "private_networking",
                  "backups",
                  "ipv6",
                  "metadata",
                  "install_agent",
                  "storage",
                  "image_transfer"
                ],
                "available": true,
                "sizes": [
                  "s-1vcpu-1gb",
                  "s-1vcpu-2gb",
                  "s-1vcpu-3gb",
                  "s-2vcpu-2gb",
                  "s-3vcpu-1gb",
                  "s-2vcpu-4gb",
                  "s-4vcpu-8gb",
                  "s-6vcpu-16gb",
                  "s-8vcpu-32gb",
                  "s-12vcpu-48gb",
                  "s-16vcpu-64gb",
                  "s-20vcpu-96gb",
                  "s-24vcpu-128gb",
                  "s-32vcpu-192g"
                ]
              },
              "tags": [
                "web",
                "env:prod"
              ],
              "vpc_uuid": "760e09ef-dc84-11e8-981e-3cfdfeaae000"
            },
            {
              "id": 3164459,
              "name": "assets.example.com",
              "memory": 1024,
              "vcpus": 1,
              "disk": 25,
              "locked": false,
              "status": "active",
              "kernel": null,
              "created_at": "2020-07-21T18:42:27Z",
              "features": [
                "private_networking"
              ],
              "backup_ids": [],
              "next_backup_window": {
                "start": "2020-07-30T00:00:00Z",
                "end": "2020-07-30T23:00:00Z"
              },
              "snapshot_ids": [],
              "image": {
                "id": 63663980,
                "name": "20.04 (LTS) x64",
                "distribution": "Ubuntu",
                "slug": "ubuntu-20-04-x64",
                "public": true,
                "regions": [
                  "ams2",
                  "ams3",
                  "blr1",
                  "fra1",
                  "lon1",
                  "nyc1",
                  "nyc2",
                  "nyc3",
                  "sfo1",
                  "sfo2",
                  "sfo3",
                  "sgp1",
                  "tor1"
                ],
                "created_at": "2020-05-15T05:47:50Z",
                "type": "snapshot",
                "min_disk_size": 20,
                "size_gigabytes": 2.36,
                "description": "",
                "tags": [],
                "status": "available",
                "error_message": ""
              },
              "volume_ids": [
                "506f78a4-e098-11e5-ad9f-000f53306ae1"
              ],
              "size": {
                "slug": "s-1vcpu-1gb",
                "memory": 1024,
                "vcpus": 1,
                "disk": 25,
                "transfer": 1,
                "price_monthly": 5,
                "price_hourly": 0.00743999984115362,
                "regions": [
                  "ams2",
                  "ams3",
                  "blr1",
                  "fra1",
                  "lon1",
                  "nyc1",
                  "nyc2",
                  "nyc3",
                  "sfo1",
                  "sfo2",
                  "sfo3",
                  "sgp1",
                  "tor1"
                ],
                "available": true
              },
              "size_slug": "s-1vcpu-1gb",
              "networks": {
                "v4": [
                  {
                    "ip_address": "10.128.192.138",
                    "netmask": "255.255.0.0",
                    "gateway": "nil",
                    "type": "private"
                  },
                  {
                    "ip_address": "162.243.0.4",
                    "netmask": "255.255.255.0",
                    "gateway": "162.243.0.1",
                    "type": "public"
                  }
                ],
                "v6": []
              },
              "region": {
                "name": "New York 3",
                "slug": "nyc3",
                "features": [
                  "private_networking",
                  "backups",
                  "ipv6",
                  "metadata",
                  "install_agent",
                  "storage",
                  "image_transfer"
                ],
                "available": true,
                "sizes": [
                  "s-1vcpu-1gb",
                  "s-1vcpu-2gb",
                  "s-1vcpu-3gb",
                  "s-2vcpu-2gb",
                  "s-3vcpu-1gb",
                  "s-2vcpu-4gb",
                  "s-4vcpu-8gb",
                  "s-6vcpu-16gb",
                  "s-8vcpu-32gb",
                  "s-12vcpu-48gb",
                  "s-16vcpu-64gb",
                  "s-20vcpu-96gb",
                  "s-24vcpu-128gb",
                  "s-32vcpu-192g"
                ]
              },
              "tags": [
                "storage",
                "env:prod"
              ],
              "vpc_uuid": "760e09ef-dc84-11e8-981e-3cfdfeaae000"
            }
          ],
          "links": {
            "pages": {}
          },
          "meta": {
            "total": 2
          }
        }
      },
      "DropletCreateRequest": {
        "value": {
          "name": "example.com",
          "region": "nyc3",
          "size": "s-1vcpu-1gb",
          "image": "ubuntu-20-04-x64",
          "ssh_keys": [
            289794,
            "3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45"
          ],
          "backups": true,
          "ipv6": true,
          "monitoring": true,
          "tags": [
            "env:prod",
            "web"
          ],
          "user_data": "#cloud-config\nruncmd:\n  - touch /test.txt\n",
          "private_networking": true,
          "vpc_uuid": "760e09ef-dc84-11e8-981e-3cfdfeaae000"
        }
      },
      "DropletMultiCreateRequest": {
        "value": {
          "names": [
            "sub-01.example.com",
            "sub-02.example.com"
          ],
          "region": "nyc3",
          "size": "s-1vcpu-1gb",
          "image": "ubuntu-20-04-x64",
          "ssh_keys": [
            289794,
            "3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45"
          ],
          "backups": true,
          "ipv6": true,
          "monitoring": true,
          "tags": [
            "env:prod",
            "web"
          ],
          "user_data": "#cloud-config\nruncmd:\n  - touch /test.txt\n",
          "private_networking": true,
          "vpc_uuid": "760e09ef-dc84-11e8-981e-3cfdfeaae000"
        }
      },
      "DropletCreateResponse": {
        "value": {
          "droplet": {
            "id": 3164444,
            "name": "example.com",
            "memory": 1024,
            "vcpus": 1,
            "disk": 25,
            "locked": false,
            "status": "new",
            "kernel": null,
            "created_at": "2020-07-21T18:37:44Z",
            "features": [
              "backups",
              "private_networking",
              "ipv6",
              "monitoring"
            ],
            "backup_ids": [],
            "next_backup_window": null,
            "snapshot_ids": [],
            "image": {
              "id": 63663980,
              "name": "20.04 (LTS) x64",
              "distribution": "Ubuntu",
              "slug": "ubuntu-20-04-x64",
              "public": true,
              "regions": [
                "ams2",
                "ams3",
                "blr1",
                "fra1",
                "lon1",
                "nyc1",
                "nyc2",
                "nyc3",
                "sfo1",
                "sfo2",
                "sfo3",
                "sgp1",
                "tor1"
              ],
              "created_at": "2020-05-15T05:47:50Z",
              "type": "snapshot",
              "min_disk_size": 20,
              "size_gigabytes": 2.36,
              "description": "",
              "tags": [],
              "status": "available",
              "error_message": ""
            },
            "volume_ids": [],
            "size": {
              "slug": "s-1vcpu-1gb",
              "memory": 1024,
              "vcpus": 1,
              "disk": 25,
              "transfer": 1,
              "price_monthly": 5,
              "price_hourly": 0.00743999984115362,
              "regions": [
                "ams2",
                "ams3",
                "blr1",
                "fra1",
                "lon1",
                "nyc1",
                "nyc2",
                "nyc3",
                "sfo1",
                "sfo2",
                "sfo3",
                "sgp1",
                "tor1"
              ],
              "available": true
            },
            "size_slug": "s-1vcpu-1gb",
            "networks": {
              "v4": [],
              "v6": []
            },
            "region": {
              "name": "New York 3",
              "slug": "nyc3",
              "features": [
                "private_networking",
                "backups",
                "ipv6",
                "metadata",
                "install_agent",
                "storage",
                "image_transfer"
              ],
              "available": true,
              "sizes": [
                "s-1vcpu-1gb",
                "s-1vcpu-2gb",
                "s-1vcpu-3gb",
                "s-2vcpu-2gb",
                "s-3vcpu-1gb",
                "s-2vcpu-4gb",
                "s-4vcpu-8gb",
                "s-6vcpu-16gb",
                "s-8vcpu-32gb",
                "s-12vcpu-48gb",
                "s-16vcpu-64gb",
                "s-20vcpu-96gb",
                "s-24vcpu-128gb",
                "s-32vcpu-192g"
              ]
            },
            "tags": [
              "web",
              "env:prod"
            ],
            "vpc_uuid": "760e09ef-dc84-11e8-981e-3cfdfeaae000"
          },
          "links": {
            "actions": [
              {
                "id": 7515,
                "rel": "create",
                "href": "https://api.digitalocean.com/v2/actions/7515"
              }
            ]
          }
        }
      },
      "DropletMultiCreateResponse": {
        "value": {
          "droplets": [
            {
              "id": 3164444,
              "name": "sub-01.example.com",
              "memory": 1024,
              "vcpus": 1,
              "disk": 25,
              "locked": false,
              "status": "new",
              "kernel": null,
              "created_at": "2020-07-21T18:37:44Z",
              "features": [
                "backups",
                "private_networking",
                "ipv6",
                "monitoring"
              ],
              "backup_ids": [],
              "next_backup_window": null,
              "snapshot_ids": [],
              "image": {
                "id": 63663980,
                "name": "20.04 (LTS) x64",
                "distribution": "Ubuntu",
                "slug": "ubuntu-20-04-x64",
                "public": true,
                "regions": [
                  "ams2",
                  "ams3",
                  "blr1",
                  "fra1",
                  "lon1",
                  "nyc1",
                  "nyc2",
                  "nyc3",
                  "sfo1",
                  "sfo2",
                  "sfo3",
                  "sgp1",
                  "tor1"
                ],
                "created_at": "2020-05-15T05:47:50Z",
                "type": "snapshot",
                "min_disk_size": 20,
                "size_gigabytes": 2.36,
                "description": "",
                "tags": [],
                "status": "available",
                "error_message": ""
              },
              "volume_ids": [],
              "size": {
                "slug": "s-1vcpu-1gb",
                "memory": 1024,
                "vcpus": 1,
                "disk": 25,
                "transfer": 1,
                "price_monthly": 5,
                "price_hourly": 0.00743999984115362,
                "regions": [
                  "ams2",
                  "ams3",
                  "blr1",
                  "fra1",
                  "lon1",
                  "nyc1",
                  "nyc2",
                  "nyc3",
                  "sfo1",
                  "sfo2",
                  "sfo3",
                  "sgp1",
                  "tor1"
                ],
                "available": true
              },
              "size_slug": "s-1vcpu-1gb",
              "networks": {
                "v4": [],
                "v6": []
              },
              "region": {
                "name": "New York 3",
                "slug": "nyc3",
                "features": [
                  "private_networking",
                  "backups",
                  "ipv6",
                  "metadata",
                  "install_agent",
                  "storage",
                  "image_transfer"
                ],
                "available": true,
                "sizes": [
                  "s-1vcpu-1gb",
                  "s-1vcpu-2gb",
                  "s-1vcpu-3gb",
                  "s-2vcpu-2gb",
                  "s-3vcpu-1gb",
                  "s-2vcpu-4gb",
                  "s-4vcpu-8gb",
                  "s-6vcpu-16gb",
                  "s-8vcpu-32gb",
                  "s-12vcpu-48gb",
                  "s-16vcpu-64gb",
                  "s-20vcpu-96gb",
                  "s-24vcpu-128gb",
                  "s-32vcpu-192g"
                ]
              },
              "tags": [
                "web",
                "env:prod"
              ],
              "vpc_uuid": "760e09ef-dc84-11e8-981e-3cfdfeaae000"
            },
            {
              "id": 3164445,
              "name": "sub-02.example.com",
              "memory": 1024,
              "vcpus": 1,
              "disk": 25,
              "locked": false,
              "status": "new",
              "kernel": null,
              "created_at": "2020-07-21T18:37:44Z",
              "features": [
                "backups",
                "private_networking",
                "ipv6",
                "monitoring"
              ],
              "backup_ids": [],
              "next_backup_window": null,
              "snapshot_ids": [],
              "image": {
                "id": 63663980,
                "name": "20.04 (LTS) x64",
                "distribution": "Ubuntu",
                "slug": "ubuntu-20-04-x64",
                "public": true,
                "regions": [
                  "ams2",
                  "ams3",
                  "blr1",
                  "fra1",
                  "lon1",
                  "nyc1",
                  "nyc2",
                  "nyc3",
                  "sfo1",
                  "sfo2",
                  "sfo3",
                  "sgp1",
                  "tor1"
                ],
                "created_at": "2020-05-15T05:47:50Z",
                "type": "snapshot",
                "min_disk_size": 20,
                "size_gigabytes": 2.36,
                "description": "",
                "tags": [],
                "status": "available",
                "error_message": ""
              },
              "volume_ids": [],
              "size": {
                "slug": "s-1vcpu-1gb",
                "memory": 1024,
                "vcpus": 1,
                "disk": 25,
                "transfer": 1,
                "price_monthly": 5,
                "price_hourly": 0.00743999984115362,
                "regions": [
                  "ams2",
                  "ams3",
                  "blr1",
                  "fra1",
                  "lon1",
                  "nyc1",
                  "nyc2",
                  "nyc3",
                  "sfo1",
                  "sfo2",
                  "sfo3",
                  "sgp1",
                  "tor1"
                ],
                "available": true
              },
              "size_slug": "s-1vcpu-1gb",
              "networks": {
                "v4": [],
                "v6": []
              },
              "region": {
                "name": "New York 3",
                "slug": "nyc3",
                "features": [
                  "private_networking",
                  "backups",
                  "ipv6",
                  "metadata",
                  "install_agent",
                  "storage",
                  "image_transfer"
                ],
                "available": true,
                "sizes": [
                  "s-1vcpu-1gb",
                  "s-1vcpu-2gb",
                  "s-1vcpu-3gb",
                  "s-2vcpu-2gb",
                  "s-3vcpu-1gb",
                  "s-2vcpu-4gb",
                  "s-4vcpu-8gb",
                  "s-6vcpu-16gb",
                  "s-8vcpu-32gb",
                  "s-12vcpu-48gb",
                  "s-16vcpu-64gb",
                  "s-20vcpu-96gb",
                  "s-24vcpu-128gb",
                  "s-32vcpu-192g"
                ]
              },
              "tags": [
                "web",
                "env:prod"
              ],
              "vpc_uuid": "760e09ef-dc84-11e8-981e-3cfdfeaae000"
            }
          ],
          "links": {
            "actions": [
              {
                "id": 7515,
                "rel": "create",
                "href": "https://api.digitalocean.com/v2/actions/7515"
              },
              {
                "id": 7516,
                "rel": "create",
                "href": "https://api.digitalocean.com/v2/actions/7516"
              }
            ]
          }
        }
      },
      "DropletSingle": {
        "value": {
          "id": 3164444,
          "name": "example.com",
          "memory": 1024,
          "vcpus": 1,
          "disk": 25,
          "locked": false,
          "status": "active",
          "kernel": null,
          "created_at": "2020-07-21T18:37:44Z",
          "features": [
            "backups",
            "private_networking",
            "ipv6"
          ],
          "backup_ids": [
            53893572
          ],
          "next_backup_window": {
            "start": "2020-07-30T00:00:00Z",
            "end": "2020-07-30T23:00:00Z"
          },
          "snapshot_ids": [
            67512819
          ],
          "image": {
            "id": 63663980,
            "name": "20.04 (LTS) x64",
            "distribution": "Ubuntu",
            "slug": "ubuntu-20-04-x64",
            "public": true,
            "regions": [
              "ams2",
              "ams3",
              "blr1",
              "fra1",
              "lon1",
              "nyc1",
              "nyc2",
              "nyc3",
              "sfo1",
              "sfo2",
              "sfo3",
              "sgp1",
              "tor1"
            ],
            "created_at": "2020-05-15T05:47:50Z",
            "type": "snapshot",
            "min_disk_size": 20,
            "size_gigabytes": 2.36,
            "description": "",
            "tags": [],
            "status": "available",
            "error_message": ""
          },
          "volume_ids": [],
          "size": {
            "slug": "s-1vcpu-1gb",
            "memory": 1024,
            "vcpus": 1,
            "disk": 25,
            "transfer": 1,
            "price_monthly": 5,
            "price_hourly": 0.00743999984115362,
            "regions": [
              "ams2",
              "ams3",
              "blr1",
              "fra1",
              "lon1",
              "nyc1",
              "nyc2",
              "nyc3",
              "sfo1",
              "sfo2",
              "sfo3",
              "sgp1",
              "tor1"
            ],
            "available": true
          },
          "size_slug": "s-1vcpu-1gb",
          "networks": {
            "properties": {
              "v4": [
                {
                  "ip_address": "10.128.192.124",
                  "netmask": "255.255.0.0",
                  "gateway": "nil",
                  "type": "private"
                },
                {
                  "ip_address": "192.241.165.154",
                  "netmask": "255.255.255.0",
                  "gateway": "192.241.165.1",
                  "type": "public"
                }
              ],
              "v6": [
                {
                  "ip_address": "2604:a880:0:1010::18a:a001",
                  "netmask": 64,
                  "gateway": "2604:a880:0:1010::1",
                  "type": "public"
                }
              ]
            }
          },
          "region": {
            "name": "New York 3",
            "slug": "nyc3",
            "features": [
              "private_networking",
              "backups",
              "ipv6",
              "metadata",
              "install_agent",
              "storage",
              "image_transfer"
            ],
            "available": true,
            "sizes": [
              "s-1vcpu-1gb",
              "s-1vcpu-2gb",
              "s-1vcpu-3gb",
              "s-2vcpu-2gb",
              "s-3vcpu-1gb",
              "s-2vcpu-4gb",
              "s-4vcpu-8gb",
              "s-6vcpu-16gb",
              "s-8vcpu-32gb",
              "s-12vcpu-48gb",
              "s-16vcpu-64gb",
              "s-20vcpu-96gb",
              "s-24vcpu-128gb",
              "s-32vcpu-192g"
            ]
          },
          "tags": [
            "web",
            "env:prod"
          ],
          "vpc_uuid": "760e09ef-dc84-11e8-981e-3cfdfeaae000"
        }
      },
      "images_all": {
        "value": {
          "images": [
            {
              "id": 7555620,
              "name": "Nifty New Snapshot",
              "distribution": "Ubuntu",
              "slug": null,
              "public": false,
              "regions": [
                "nyc2",
                "nyc3"
              ],
              "created_at": "2014-11-04T22:23:02Z",
              "type": "snapshot",
              "min_disk_size": 20,
              "size_gigabytes": 2.34,
              "description": "",
              "tags": [],
              "status": "available",
              "error_message": ""
            },
            {
              "id": 7555621,
              "name": "Another Snapshot",
              "distribution": "Ubuntu",
              "slug": null,
              "public": false,
              "regions": [
                "nyc2"
              ],
              "created_at": "2014-11-04T22:23:02Z",
              "type": "snapshot",
              "min_disk_size": 20,
              "size_gigabytes": 2.34,
              "description": "",
              "tags": [],
              "status": "available",
              "error_message": ""
            },
            {
              "id": 63663980,
              "name": "20.04 (LTS) x64",
              "distribution": "Ubuntu",
              "slug": "ubuntu-20-04-x64",
              "public": true,
              "regions": [
                "nyc2",
                "nyc3"
              ],
              "created_at": "2020-05-15T05:47:50Z",
              "type": "snapshot",
              "min_disk_size": 20,
              "size_gigabytes": 2.36,
              "description": "",
              "tags": [],
              "status": "available",
              "error_message": ""
            },
            {
              "id": 7555621,
              "name": "A custom image",
              "distribution": "Arch Linux",
              "slug": null,
              "public": false,
              "regions": [
                "nyc3"
              ],
              "created_at": "2014-11-04T22:23:02Z",
              "type": "custom",
              "min_disk_size": 20,
              "size_gigabytes": 2.34,
              "description": "",
              "tags": [],
              "status": "available",
              "error_message": ""
            },
            {
              "id": 7555621,
              "name": "An APP image",
              "distribution": "Fedora",
              "slug": null,
              "public": false,
              "regions": [
                "nyc2",
                "nyc3"
              ],
              "created_at": "2014-11-04T22:23:02Z",
              "type": "snapshot",
              "min_disk_size": 20,
              "size_gigabytes": 2.34,
              "description": "",
              "tags": [],
              "status": "available",
              "error_message": ""
            },
            {
              "id": 7555621,
              "name": "A simple tagged image",
              "distribution": "CentOS",
              "slug": null,
              "public": false,
              "regions": [
                "nyc2",
                "nyc3"
              ],
              "created_at": "2014-11-04T22:23:02Z",
              "type": "snapshot",
              "min_disk_size": 20,
              "size_gigabytes": 2.34,
              "description": "",
              "tags": [
                "simple-image"
              ],
              "status": "available",
              "error_message": ""
            }
          ],
          "links": {
            "pages": {}
          },
          "meta": {
            "total": 6
          }
        }
      },
      "images_snapshots": {
        "value": {
          "images": [
            {
              "id": 7555620,
              "name": "Nifty New Snapshot",
              "distribution": "Ubuntu",
              "slug": null,
              "public": false,
              "regions": [
                "nyc2",
                "nyc3"
              ],
              "created_at": "2014-11-04T22:23:02Z",
              "type": "snapshot",
              "min_disk_size": 20,
              "size_gigabytes": 2.34,
              "description": "",
              "tags": [],
              "status": "available",
              "error_message": ""
            },
            {
              "id": 7555621,
              "name": "Another Snapshot",
              "distribution": "Ubuntu",
              "slug": null,
              "public": false,
              "regions": [
                "nyc2"
              ],
              "created_at": "2014-11-04T22:23:02Z",
              "type": "snapshot",
              "min_disk_size": 20,
              "size_gigabytes": 2.34,
              "description": "",
              "tags": [],
              "status": "available",
              "error_message": ""
            }
          ],
          "links": {
            "pages": {}
          },
          "meta": {
            "total": 2
          }
        }
      },
      "images_distribution": {
        "description": "**Important:**  \nThe `type` query parameter is not directly related to the `type` attribute.\nThe main thing to remember here is that DigitalOcean-produced distribution images will have `snapshot` as the type attribute. \n",
        "value": {
          "images": [
            {
              "id": 63663980,
              "name": "20.04 (LTS) x64",
              "distribution": "Ubuntu",
              "slug": "ubuntu-20-04-x64",
              "public": true,
              "regions": [
                "nyc2",
                "nyc3"
              ],
              "created_at": "2020-05-15T05:47:50Z",
              "type": "snapshot",
              "min_disk_size": 20,
              "size_gigabytes": 2.36,
              "description": "",
              "tags": [],
              "status": "available",
              "error_message": ""
            }
          ],
          "links": {
            "pages": {}
          },
          "meta": {
            "total": 1
          }
        }
      },
      "images_custom": {
        "value": {
          "images": [
            {
              "id": 7555621,
              "name": "A custom image",
              "distribution": "Arch Linux",
              "slug": null,
              "public": false,
              "regions": [
                "nyc3"
              ],
              "created_at": "2014-11-04T22:23:02Z",
              "type": "custom",
              "min_disk_size": 20,
              "size_gigabytes": 2.34,
              "description": "",
              "tags": [],
              "status": "available",
              "error_message": ""
            }
          ],
          "links": {
            "pages": {}
          },
          "meta": {
            "total": 1
          }
        }
      },
      "images_application": {
        "description": "**Important:**  \nThe `type` query parameter is not directly related to the `type` attribute.\n",
        "value": {
          "images": [
            {
              "id": 7555621,
              "name": "An APP image",
              "distribution": "Fedora",
              "slug": null,
              "public": false,
              "regions": [
                "nyc2",
                "nyc3"
              ],
              "created_at": "2014-11-04T22:23:02Z",
              "type": "snapshot",
              "min_disk_size": 20,
              "size_gigabytes": 2.34,
              "description": "",
              "tags": [],
              "status": "available",
              "error_message": ""
            }
          ],
          "links": {
            "pages": {}
          },
          "meta": {
            "total": 1
          }
        }
      },
      "images_tagged": {
        "value": {
          "images": [
            {
              "id": 7555621,
              "name": "A simple tagged image",
              "distribution": "CentOS",
              "slug": null,
              "public": false,
              "regions": [
                "nyc2",
                "nyc3"
              ],
              "created_at": "2014-11-04T22:23:02Z",
              "type": "snapshot",
              "min_disk_size": 20,
              "size_gigabytes": 2.34,
              "description": "",
              "tags": [
                "simple-image"
              ],
              "status": "available",
              "error_message": ""
            }
          ],
          "links": {
            "pages": {}
          },
          "meta": {
            "total": 1
          }
        }
      },
      "SnapshotsAll": {
        "value": {
          "snapshots": [
            {
              "id": "6372321",
              "name": "web-01-1595954862243",
              "created_at": "2020-07-28T16:47:44Z",
              "regions": [
                "nyc3",
                "sfo3"
              ],
              "resource_id": "200776916",
              "resource_type": "droplet",
              "min_disk_size": 25,
              "size_gigabytes": 2.34,
              "tags": [
                "web",
                "env:prod"
              ]
            },
            {
              "id": "fbe805e8-866b-11e6-96bf-000f53315a41",
              "name": "pvc-01-1595954862243",
              "created_at": "2019-09-28T23:14:30Z",
              "regions": [
                "nyc1"
              ],
              "resource_id": "89bcc42f-85cf-11e6-a004-000f53315871",
              "resource_type": "volume",
              "min_disk_size": 2,
              "size_gigabytes": 0.1008,
              "tags": [
                "k8s"
              ]
            }
          ],
          "links": {},
          "meta": {
            "total": 2
          }
        }
      },
      "SnapshotsDropletsOnly": {
        "value": {
          "snapshots": [
            {
              "id": "6372321",
              "name": "web-01-1595954862243",
              "created_at": "2020-07-28T16:47:44Z",
              "regions": [
                "nyc3",
                "sfo3"
              ],
              "resource_id": "200776916",
              "resource_type": "droplet",
              "min_disk_size": 25,
              "size_gigabytes": 2.34,
              "tags": [
                "web",
                "env:prod"
              ]
            }
          ],
          "links": {},
          "meta": {
            "total": 1
          }
        }
      },
      "SnapshotsVolumesOnly": {
        "value": {
          "snapshots": [
            {
              "id": "fbe805e8-866b-11e6-96bf-000f53315a41",
              "name": "pvc-01-1595954862243",
              "created_at": "2019-09-28T23:14:30Z",
              "regions": [
                "nyc1"
              ],
              "resource_id": "89bcc42f-85cf-11e6-a004-000f53315871",
              "resource_type": "volume",
              "min_disk_size": 2,
              "size_gigabytes": 0.1008,
              "tags": [
                "k8s"
              ]
            }
          ],
          "links": {},
          "meta": {
            "total": 1
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}